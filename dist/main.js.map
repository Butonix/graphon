{"version":3,"sources":["webpack://Graphon/webpack/universalModuleDefinition","webpack://Graphon/webpack/bootstrap","webpack://Graphon/./src/styles/index.pcss","webpack://Graphon/./src/modules/state.js","webpack://Graphon/./src/utils/dom.js","webpack://Graphon/./src/utils/event.js","webpack://Graphon/./src/modules/path.js","webpack://Graphon/./src/modules/bar.js","webpack://Graphon/./src/modules/area.js","webpack://Graphon/./src/modules/graph.js","webpack://Graphon/./src/utils/numbers.js","webpack://Graphon/./src/modules/minimap.js","webpack://Graphon/./src/modules/tooltip.js","webpack://Graphon/./src/modules/pointer.js","webpack://Graphon/./src/modules/chart.js","webpack://Graphon/./src/modules/legend.js","webpack://Graphon/./src/modules/header.js","webpack://Graphon/./src/graphon.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","State","chartsData","colors","titles","type","title","byMonth","scaled","height","lines","split","this","columns","dates","forEach","line","date","values","val","index","parseInt","push","names","isYScaled","_cache","getLinePoints","daysCount","length","_recalculatedPoints","keys","lineName","getColumnByName","from","count","slice","chartName","types","currentChartNumber","pointIndex","prevChartKey","linesAvailable","stacks","to","stackValue","getStackForPoint","skipLines","includes","max","filter","maxPerLines","map","Math","minPerLines","min","leftPointIndex","pointsVisible","getPointsSlice","entries","make","tagName","classNames","attributes","el","document","createElementNS","createElement","Array","isArray","classList","add","className","attrName","setAttribute","animateCounter","holder","prevVal","animateType","prev","cur","style","width","textContent","innerHTML","appendChild","getPageX","event","touches","pageX","canvasHeight","zeroShifting","color","kY","stroke","stepX","isScaled","prevX","currentMinimum","path","fill","pathData","graphHidden","round","x","y","skipStep","contains","CSS","status","toggle","wrapper","hidden","prevValue","bar","newStack","children","createPath","morphing","undefined","per","total","valueInPercents","valueToPercent","percentToValue","skip","prevPercents","isNaN","percentage","pointToChange","trim","join","beginElement","canvas","oyGroup","oxGroup","stepY","strokeWidth","initialWidth","maxPoint","minPoint","oyScaling","zeroShiftingScaling","charts","_width","_height","computeInitialWidth","computeSteps","state","stepsAvailable","newStepYIndex","reverse","findIndex","step","newStepY","getCommonChartsType","getMaximumAccumulatedByColumns","drawBarCharts","drawAreaCharts","drawScaledLineCharts","drawLineCharts","areas","getLineColor","pointsCount","getStacks","moveTo","pointValue","stepTo","area","finish","getAll","barmens","barmen","chart","isHidden","hiddenCharts","getMaxForLineSliced","checkPathVisibility","lineMin","minForLine","lineMax","maxForLine","column","render","leftPoint","newLeft","transform","scaling","newMax","newMin","number","maxSlicing","zeros","log10","rounding","pow","result","floor","newZeroShifting","shift","newKY","useRecalculated","recalculateBars","recalculateArea","recalculated","recalculatedValues","lenCached","move","clearRecalculatedValues","hiddenPointsValue","reduce","saveRecalculatedValues","update","toggleVisibility","nodes","leftZone","leftZoneScaler","rightZone","rightZoneScaler","centerZone","wrapperWidthCached","viewportWidth","viewportWidthInitial","viewportOffsetLeft","scalerWidth","viewportWidthBeforeDrag","moveStartX","wrapperLeftCoord","viewportPressed","leftScalerClicked","rightScalerClicked","scaleDebounce","leftZoneWidth","rightZoneWidth","wrapperRect","graph","animate","setTimeout","getBoundingClientRect","bindEvents","remove","renderCanvas","offsetWidth","offsetHeight","renderCharts","setInitialPosition","wrapperWidth","left","scrollDistance","leftWidth","rightWidth","centerWidth","rect","minimalMapWidth","moveViewport","syncScrollWithChart","fitToMax","scrolledValue","offsetLeft","maxLeft","minLeft","leftZoneMinimumWidth","supportsPassive","opts","addEventListener","removeEventListener","e","viewportMousedown","passive","viewportMousemove","viewportMouseup","target","closest","viewportDragged","scalerDragged","finishSliding","finishLeftScaling","finishRightScaling","delta","_ftmd","clearTimeout","newScroll","fromScale","chartScroll","scroll","side","newScalerWidth","direction","right","leftZoneMaximumWidth","rightZoneMaximumWidth","newViewportWidth","initialScale","scale","togglePathVisibility","recalculatePointsHeight","notHiddenGraph","scaleToMaxPoint","getMaxFromVisible","_values","showed","valueTitle","lineLeftCoord","clear","prevValues","_setValuesDebounce","summ","createItem","all","isAll","item","counter","acc","percent","ceil","percentEl","titleEl","valueBeautified","toString","replace","string","dt","months","week","month","getMonth","year","getFullYear","weekday","getDay","day","getDate","newDate","_prevDate","pointers","pointer","pointerHidden","leftPx","show","borderColor","coord","kYScaled","viewport","cursorLine","grid","gridLines","legend","legendDates","overlays","overlayLeft","overlayRight","tooltip","scrollValue","legendDateWidth","legendDateWidthMargins","legendDatesHidedTimes","legendDatesRecentlyHided","onscreenDates","Set","onscreenDatesElements","_datesPerScreenInitial","_showEveryNDateInitial","cache","_initialScale","_initialStep","_hoveredPointIndex","chartToViewportRatio","originalWidth","scaledViewportRatio","originalScalingChange","gridSection","gridSectionHidden","gridCounter","gridCounterHidden","gridCounterFirst","gridCounterSecond","dateHidden","viewportHeight","calculateWrapperCoords","calculateInitialValues","renderGrid","renderLegend","renderOverlays","stepsCount","kYRatio","diffSize","decimals","possibleHeight","isSecond","text","thousands","dataset","element","parentNode","insertBefore","stepYSecond","kYSecond","maxSecond","minSecond","getMaxVisiblePoint","linesCount","getLegendStep","getMinVisiblePoint","j","createLine","bottom","getLegendCounter","counter2","toggleGridLabelsForChart","originalIndex","skippedCount","onscreenPointsCount","datesPerScreen","checks","check","some","dateEl","newX","stepScaled","checkDateShouldBeHidden","originIndex","visibleIndex","Date","toLocaleDateString","moveDate","datesOnScreenSlice","rightPointIndex","datesOnScreenIndexes","pointsOnScreen","has","pushDate","removeDate","delete","nextSibling","position","hide","hideBarHighlighting","addOnscreenDates","_sd","header","setPeriod","scaleLines","getMinForLineSliced","_gd","mouseMove","mouseLeave","viewportX","stepXWithScale","scrollOffset","hoveredPointIndex","abs","highlightBar","showValues","hideOverlays","querySelectorAll","opacity","buttons","itemWobble","itemSelected","itemEnabled","checkbox","backgroundColor","createTextNode","_clickPrevented","itemClicked","mousedown","mouseup","_timer","uncheckAllExceptPassed","exceptName","togglePath","minimap","isLast","typeSwitchers","detailsTogglers","typeSwitcher","typeSwitcherCurrent","detailsToggler","detailsTogglerItem","detailsTogglerItemCurrent","dataByMonth","appendDetailsToggler","icon","switcher","typeSwitcherClicked","toggler","dataStoringProperty","togglerItem","detailsTogglerClicked","destroy","renderMap","createState","leftDateTimestamp","rightDateTimestamp","leftDate","rightDate","holderId","data","getElementById","loadStyles","prepareUi","nightModeEnabled","head","querySelector","id","renderUi"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Graphon\"] = factory();\n\telse\n\t\troot[\"Graphon\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = \":root{--color-bg:#fff;--color-gray:#939ca1;--gray-line:rgba(24,45,59,0.1);--button-bg:#fff;--button-color:#000;--button-border:#e6e6e6;--button-bg-current:#e3f3ff;--button-border-current:#c5e2fa;--minimap-overlays-color:rgba(245,244,245,0.65);--minimap-scaler-bg:rgba(137,138,152,0.7);--minimap-scaler-bg--hover:#898a98;@custom-media --mobile (max-width: 1000px)}.tg--night-mode{--color-bg:#2b3037;--color-gray:rgba(217,242,255,0.27);--gray-line:hsla(0,0%,100%,0.1);--button-color:#fff;--button-bg:#293039;--button-border:hsla(0,0%,100%,0.2);--button-border-current:rgba(195,214,231,0.26);--button-bg-current:rgba(131,145,163,0.11);--minimap-overlays-color:rgba(38,41,43,0.62);--minimap-scaler-bg:rgba(109,146,185,0.4);--minimap-scaler-bg--hover:rgba(109,146,185,0.7)}.tg-chart{position:relative;margin-bottom:25px;//margin-right:15px;font-size:14px;font-family:Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,sans-serif;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:rgba(255,255,255,0);-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.tg-chart__viewport{display:block;overflow-x:hidden}.tg-chart svg{width:100%;height:100%}.tg-header{margin-bottom:20px;padding:15px;display:flex;flex-wrap:wrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@media (--mobile){.tg-header{font-size:15px}}.tg-header__title{flex-basis:100%;margin:0 0 15px;font-weight:600;font-size:18px}.tg-header__dates{margin-left:auto;margin-top:auto;font-size:15px;margin-bottom:auto}@media (--mobile){.tg-header__dates{font-size:13px}}.tg-header__type-switcher{display:inline-flex;background:#fff;background:var(--button-bg);border:1px solid #e6e6e6;border:1px solid var(--button-border);box-sizing:border-box;box-shadow:0 1px 1px 0 rgba(0,0,0,.03);border-radius:2px;height:34px;line-height:32px;padding:0 9px;font-size:14px;font-weight:500;cursor:pointer;z-index:99;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:rgba(255,255,255,0);-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.tg-header__type-switcher:hover{box-shadow:0 1px 1px 0 rgba(0,0,0,.08);border-color:#d8d8d8}.tg-header__type-switcher{width:34px;margin-right:5px}.tg-header__type-switcher--current{background:#e3f3ff;background:var(--button-bg-current);border:1px solid #c5e2fa;border:1px solid var(--button-border-current);border-radius:2px}.tg-header__type-switcher--current:hover{border-color:#add6f8}.tg-header__type-switcher svg{fill:currentColor;margin:auto}.tg-header__details{margin-right:15px}.tg-header__details-item{display:inline-flex;background:#fff;background:var(--button-bg);border:1px solid #e6e6e6;border:1px solid var(--button-border);box-sizing:border-box;box-shadow:0 1px 1px 0 rgba(0,0,0,.03);border-radius:2px;height:34px;line-height:32px;padding:0 9px;font-size:14px;font-weight:500;cursor:pointer;z-index:99;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:rgba(255,255,255,0);-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.tg-header__details-item:hover{box-shadow:0 1px 1px 0 rgba(0,0,0,.08);border-color:#d8d8d8}.tg-header__details-item{min-width:70px;justify-content:center}.tg-header__details-item--current{background:#e3f3ff;background:var(--button-bg-current);border:1px solid #c5e2fa;border:1px solid var(--button-border-current);border-radius:2px}.tg-header__details-item--current:hover{border-color:#add6f8}.tg-header__details-item svg{fill:currentColor}.tg-header__details-item:first-of-type:not(.tg-header__details-item--current){border-right:0;min-width:69px}.tg-header__details-item--current+.tg-header__details-item{border-left:0;min-width:69px}.tg-header__details-item:not(:last-of-type){border-radius:2px 0 0 2px}.tg-header__details-item:not(:first-of-type){border-radius:0 2px 2px 0}.tg-legend{padding:0 15px;font-family:Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,sans-serif}.tg-legend__item{display:inline-flex;background:#fff;background:var(--button-bg);border:1px solid #e6e6e6;border:1px solid var(--button-border);box-sizing:border-box;box-shadow:0 1px 1px 0 rgba(0,0,0,.03);border-radius:2px;height:34px;line-height:32px;padding:0 9px;font-size:14px;font-weight:500;cursor:pointer;z-index:99;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:rgba(255,255,255,0);-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.tg-legend__item:hover{box-shadow:0 1px 1px 0 rgba(0,0,0,.08);border-color:#d8d8d8}.tg-legend__item{margin-right:5px;padding:0 22px;color:#fff;transition:background-color .2s ease;will-change:background-color,border-color,padding;vertical-align:bottom;box-shadow:none}.tg-legend__item--current{background:#e3f3ff;background:var(--button-bg-current);border:1px solid #c5e2fa;border:1px solid var(--button-border-current);border-radius:2px}.tg-legend__item--current:hover{border-color:#add6f8}.tg-legend__item svg{fill:currentColor}.tg-legend__item--wobble{-webkit-animation:wobble .6s ease-out!important;animation:wobble .6s ease-out!important}.tg-legend__item--enabled{padding:0 10px}.tg-legend__checkbox{position:relative;width:16px;height:16px;display:none;margin:auto 7px auto 0}.tg-legend__checkbox:before{content:\\\"\\\";position:absolute;left:3px;top:3px;display:inline-block;width:11px;height:5px;border-left:2px solid #fff;border-bottom:2px solid #fff;transform:rotate(-45deg);opacity:0}@-webkit-keyframes wobble{0%{opacity:.5;transform:rotate(-4deg)}25%{opacity:1}75%{opacity:.5;transform:rotate(4deg)}to{opacity:1}}@keyframes wobble{0%{opacity:.5;transform:rotate(-4deg)}25%{opacity:1}75%{opacity:.5;transform:rotate(4deg)}to{opacity:1}}.tg-legend__item--selected{-webkit-animation:splash .15s ease;animation:splash .15s ease;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.tg-legend__item--enabled .tg-legend__checkbox:before{-webkit-animation:rolling .2s ease .1s;animation:rolling .2s ease .1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.tg-legend__item--enabled .tg-legend__checkbox{display:inline-block}@-webkit-keyframes rolling{0%{transform:rotate(-20deg) translate(2px,7px) scale(.8);opacity:0;width:0;height:0}to{transform:rotate(-50deg);opacity:1;width:11px;height:5px}}@keyframes rolling{0%{transform:rotate(-20deg) translate(2px,7px) scale(.8);opacity:0;width:0;height:0}to{transform:rotate(-50deg);opacity:1;width:11px;height:5px}}@-webkit-keyframes splash{0%{transform:scale(.95)}80%{transform:scale(1.05)}to{transform:scale(1)}}@keyframes splash{0%{transform:scale(.95)}80%{transform:scale(1.05)}to{transform:scale(1)}}.tg-minimap{position:relative;height:60px;margin:10px 15px 20px;cursor:pointer;border-radius:3px;-webkit-tap-highlight-color:rgba(255,255,255,0);-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none;border:1px solid rgba(24,45,59,.1);border:1px solid var(--gray-line);box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;//border:1px solid #ebebeb}.tg-minimap svg{border-radius:3px;overflow:hidden}.tg-minimap__left,.tg-minimap__right{position:absolute;top:0;bottom:0;width:20%;background:rgba(245,244,245,.65);background:var(--minimap-overlays-color);z-index:2;cursor:default;will-change:width}.tg-minimap__left{left:0;border-radius:3px 0 0 3px}.tg-minimap__center{position:absolute;top:-2px;bottom:-2px;width:10px;border-top:2px solid rgba(137,138,152,.7);border-top:2px solid var(--minimap-scaler-bg);border-bottom:2px solid rgba(137,138,152,.7);border-bottom:2px solid var(--minimap-scaler-bg)}.tg-minimap__right{right:0;border-radius:0 3px 3px 0}.tg-minimap__left-scaler,.tg-minimap__right-scaler{position:absolute;height:calc(100% + 4px);top:-2px;z-index:2;cursor:col-resize}.tg-minimap__left-scaler{right:0}.tg-minimap__right-scaler{left:0}.tg-minimap__left-scaler:before,.tg-minimap__right-scaler:before{content:\\\"\\\";position:absolute;height:100%;width:14px;background:rgba(137,138,152,.7);background:var(--minimap-scaler-bg);box-sizing:border-box}.tg-minimap__left-scaler:after,.tg-minimap__right-scaler:after{content:\\\"\\\";position:absolute;height:15px;width:2px;border-radius:5px;background:#fff;top:50%;transform:translateY(-50%)}.tg-minimap__right-scaler:after{left:-6px}.tg-minimap__left-scaler:after{right:-8px}.tg-minimap__left-scaler:before{right:-14px;border-radius:3px 0 0 3px;border-right:0}.tg-minimap__right-scaler:before{left:-12px;border-radius:0 3px 3px 0;border-left:0}.tg-minimap__left-scaler:hover:before,.tg-minimap__right-scaler:hover:before{background:#898a98;background:var(--minimap-scaler-bg--hover)}.tg-chart g,.tg-minimap g{transform-origin:bottom left;will-change:transform}.tg-chart .oy-group,.tg-minimap .oy-group{transition:transform .3s ease;will-change:transform;shape-rendering:optimizespeed}.tg-chart path.scaled{transition:transform .4s ease,opacity .3s ease;will-change:transform,opacity}.tg-chart path,.tg-minimap path{transform-origin:bottom left;transition:opacity .3s ease;will-change:opacity;shape-rendering:optimizespeed}.tg-chart--line path{shape-rendering:geometricprecision}.tg-chart .tg-graph--hidden,.tg-minimap .tg-graph--hidden{opacity:0}.tg-bar{will-change:opacity,transform;transition:opacity .35s ease,transform .3s ease}.tg-bar--hidden{opacity:0}.tg-chart .tg-bar--hidden{transform:matrix(1,0,0,.1,0,50)}.tg-minimap .tg-bar{transition:none!important}.tg-bar rect{will-change:height,y;shape-rendering:optimizespeed}.tg-chart__overlays{will-change:opacity;transition:opacity .25s ease}.tg-chart__overlay-left,.tg-chart__overlay-right{fill:#fff;opacity:.5;will-change:width,x}.tg-area{will-change:opacity,transform!important;transition:all .17s ease!important}.tg-area--hidden{transform:scaleY(0)!important}.tg-chart footer{margin-top:10px;margin-left:15px;height:18px;color:#939ca1;color:var(--color-gray);font-size:12px;font-family:Roboto,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,sans-serif;position:relative}.tg-chart time{position:absolute;display:block;white-space:nowrap;transition:opacity .25s ease;will-change:opacity,transform;-webkit-animation:fade-in .25s ease;animation:fade-in .25s ease}@-webkit-keyframes fade-in{0%{opacity:0}to{opacity:1}}@keyframes fade-in{0%{opacity:0}to{opacity:1}}.tg-chart time.hided{opacity:0}.tg-pointer{position:absolute;top:0;left:0;opacity:0;will-change:opacity,left}.tg-pointer--showed{opacity:1}.tg-pointer:before{content:\\\"\\\";position:absolute;top:0;left:0;bottom:0;width:1px;background:rgba(170,181,191,.33)}.tg-chart--area .tg-pointer:before{background-color:hsla(0,0%,100%,.2)}.tg-pointer__pointer{display:inline-block;width:10px;height:10px;border:3px solid #1f2938;background:#fff;border-radius:50%;position:absolute;left:-5px;bottom:0;margin-bottom:-5px;box-sizing:border-box;z-index:2;will-change:transform}.tg-pointer__pointer--hidden{display:none}.tg-grid{position:absolute;right:15px;top:0;left:15px;color:#939ca1;color:var(--color-gray);font-size:12px;font-family:Roboto,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,sans-serif}.tg-grid__section{position:absolute;left:0;right:0;bottom:0;padding-bottom:5px;border-bottom:1px solid rgba(24,45,59,.1);border-bottom:1px solid var(--gray-line);transition:transform .28s ease,opacity .35s ease,bottom .28s ease;will-change:transfrom,opacity}.tg-grid__counter{transition:opacity .3s ease;will-change:opacity}.tg-grid__counter--hidden{opacity:0}.tg-chart--line .tg-grid__counter{display:inline-block;background:#fff;background:var(--color-bg);color:#939ca1;color:var(--color-gray);border-radius:2px;padding:2px 4px;margin:0 -2px}.tg-grid__counter--second{float:right}.tg-grid__section--hidden{opacity:0;transform:translateY(-50px)}@-webkit-keyframes jump-in{0%{transform:translateY(-30px);opacity:0}to{transform:none;opacity:1}}@keyframes jump-in{0%{transform:translateY(-30px);opacity:0}to{transform:none;opacity:1}}.tg-tooltip{position:absolute;background:#fff;border-radius:10px;box-shadow:0 1px 4px 0 rgba(0,0,0,.13);top:20px;padding:10px 15px;z-index:3;transition:left .3s ease,opacity .4s ease;will-change:left,opacity;opacity:0;min-width:140px;font-size:13px;font-family:Roboto,Helvetica Neue,-apple-system,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,sans-serif}.tg-tooltip--showed{opacity:1}.tg-tooltip__title{display:block;min-height:1.1em;font-weight:500;white-space:nowrap}.tg-tooltip__title .left{position:relative;margin-right:5px;display:inline-block;vertical-align:top}.tg-tooltip__title .left span{right:auto;left:0}.tg-tooltip__values{display:flex;flex-direction:column}.tg-tooltip__values-item{display:flex;margin-top:5px}.tg-tooltip__values-item:first-of-type{margin-top:7px}.tg-tooltip__values-item-title{display:inline-block;padding-right:20px}.tg-tooltip .percents{display:inline-block;font-weight:500;min-width:26px;text-align:right;margin-right:10px}.tg-tooltip__values-item b{margin-left:auto;white-space:nowrap;position:relative;font-weight:700}.counter-prev{-webkit-animation:exit .4s ease;animation:exit .4s ease;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.counter-cur,.counter-prev{position:absolute;will-change:transform,opacity;right:0;height:1em}.counter-cur{-webkit-animation:enter .4s ease;animation:enter .4s ease;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.counter-prev.top{-webkit-animation:exitTop .3s ease;animation:exitTop .3s ease;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.counter-cur.top{-webkit-animation:enterTop .3s ease;animation:enterTop .3s ease;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}@-webkit-keyframes exit{0%{transform:none;opacity:1}to{transform:translateY(-1px) scale(1.35);opacity:0}}@keyframes exit{0%{transform:none;opacity:1}to{transform:translateY(-1px) scale(1.35);opacity:0}}@-webkit-keyframes enter{0%{transform:scale(.85) translateX(-2px);opacity:0}80%{transform:scale(1.05);opacity:1}to{transform:none}}@keyframes enter{0%{transform:scale(.85) translateX(-2px);opacity:0}80%{transform:scale(1.05);opacity:1}to{transform:none}}@-webkit-keyframes exitTop{0%{transform:none;opacity:1}to{transform:translateY(-5px);opacity:0}}@keyframes exitTop{0%{transform:none;opacity:1}to{transform:translateY(-5px);opacity:0}}@-webkit-keyframes enterTop{0%{transform:translateY(5px);opacity:0}to{transform:none;opacity:1}}@keyframes enterTop{0%{transform:translateY(5px);opacity:0}to{transform:none;opacity:1}}.tg--night-mode{background:#2b3037;color:#fff}.tg--night-mode .tg-legend__item{border-color:#384757}.tg--night-mode .tg-tooltip{background:#1c2533;color:#fff;box-shadow:none}.tg--night-mode .tg-tooltip__title{color:#fff}.tg--night-mode .tg-pointer__pointer{background:#2b3037}.tg--night-mode .tg-chart__overlays rect{fill:#2b3037}.tg--night-mode .tg-grid__section{border-color:rgba(24,45,59,.1);border-color:var(--gray-line)}.tg--night-mode .tg-chart footer,.tg--night-mode .tg-grid{color:#939ca1;color:var(--color-gray)}.tg--night-mode .all b{color:#fff!important}\"","/**\n * This class stores the sate of application\n * @todo add cache to all getters\n */\nexport default class State {\n  /**\n   * @param {string} chartsData - input data in csv format\n   * @param {string[]} colors - colors list for each line\n   * @param {string[]} titles - titles list for each line\n   * @param {string} type - graph type - line, area, bar\n   * @param {string} title - graph title\n   * @param {boolean} byMonth - grouped by month\n   * @param {number} height - chart height\n   */\n  constructor(chartsData, colors, titles, type, title, byMonth, scaled, height){\n    const lines = chartsData.split('\\n');\n\n    this.columns = [];\n    this.dates = [];\n    this.type = type;\n    this.title = title;\n    this.byMonth = byMonth;\n    this.height = height;\n\n    lines.forEach((line) => {\n      let [date, ...values] = line.split(',');\n\n      values.forEach((val, index) => {\n        val = parseInt(val, 10);\n\n        if (this.columns[index]){\n          this.columns[index].push(val);\n        } else {\n          this.columns[index] = [val];\n        }\n      });\n\n      this.dates.push(date);\n    });\n\n    this.colors = colors;\n    this.names = titles;\n    this.isYScaled = scaled || false;\n\n    /**\n     * Cache\n     */\n    this._cache = {\n      /**\n       * @todo maybe array copying worst than slice\n       */\n      getLinePoints: {},\n      dates: this.columns[0],\n      daysCount: this.columns[0].length\n    };\n\n    this._recalculatedPoints = [];\n  }\n\n  /**\n   * Column with dates is 0-index column, so shift it\n   * First element in arrays is column name (\"x\") so slice it\n   * @return {number[]} - array of dates in milliseconds\n   */\n  // get dates(){\n  //   return this._cache.dates;\n  // }\n\n  /**\n   * Return available line names\n   * @return {string[]} - array of graph names\n   */\n  get linesAvailable(){\n    return Object.keys(this.names);\n  }\n\n  /**\n   * Returns numbers of days at the input data\n   * @return {number}\n   */\n  get daysCount(){\n    return this._cache.daysCount;\n  }\n\n  /**\n   * Returns values of line by line name\n   * @param {string} lineName - \"y0\", \"y1\" etc\n   * @return {number[]}\n   */\n  getLinePoints(lineName){\n    if (this._cache.getLinePoints[lineName]){\n      return this._cache.getLinePoints[lineName];\n    }\n\n    this._cache.getLinePoints[lineName] = this.getColumnByName(lineName);\n\n\n    return this._cache.getLinePoints[lineName];\n  }\n\n  /**\n   * Return column by name\n   * @param {string} name - \"y0\", \"y1\" etc\n   * @return {array}\n   */\n  getColumnByName(name){\n    return this.columns[name];\n  }\n\n  /**\n   * Return N points from passed position\n   * @param {string} lineName - \"y0\", \"y1\", ...etc\n   * @param {number} from - start position\n   * @param {number} count - how many items requested\n   * @return {number[]}\n   */\n  getPointsSlice(lineName, from, count){\n    return this.getLinePoints(lineName).slice(from, from + count);\n  }\n\n  /**\n   * Returns color of line by line name\n   * @param {string} lineName - \"y0\", \"y1\" etc\n   * @return {string} - hex color like \"#333333\"\n   */\n  getLineColor(lineName){\n    return this.colors[lineName];\n  }\n\n  /**\n   * Returns chart type by name\n   * @param {string} chartName - \"y0\", \"y1\" etc\n   * @return {string} - \"line\", \"bar\", \"area\"\n   */\n  getChartType(chartName){\n    return this.types[chartName];\n  }\n\n  /**\n   * Detect type of charts\n   * @return {string}\n   */\n  getCommonChartsType(){\n    return this.type;\n  }\n\n  /**\n   * Return value of same point of previous chart\n   * @param currentChartNumber\n   * @param pointIndex\n   */\n  getPrevChartValueForPoint(currentChartNumber, pointIndex){\n    let prevChartKey = this.linesAvailable[currentChartNumber - 1];\n    return this.getLinePoints(prevChartKey)[pointIndex];\n  }\n\n  /**\n   * Return a stack value for each point\n   */\n  getStacks(){\n    if (this._cache.stacks){\n      return this._cache.stacks;\n    }\n\n    let from = 0;\n    let to = this.daysCount;\n    let stacks = [];\n\n    for (let pointIndex = from; pointIndex < to; pointIndex++){\n      let stackValue = this.getStackForPoint(pointIndex);\n\n      stacks.push(stackValue);\n    }\n\n    this._cache.stacks = stacks;\n\n    return this._cache.stacks;\n  }\n\n  /**\n   * Return accumulated stack value for point\n   * @param {number} pointIndex\n   * @param {string[]} skipLines - line numbers to skip (it may be hidden)\n   * @return {number}\n   */\n  getStackForPoint(pointIndex, skipLines = []){\n    let stackValue = 0;\n\n    this.linesAvailable.forEach(line => {\n      if (skipLines.includes(line)){\n        return;\n      }\n\n      stackValue += this.getLinePoints(line)[pointIndex];\n    });\n\n    return stackValue;\n  }\n\n  /**\n   *\n   * @param from\n   * @param to\n   * @param {string[]} skipLines - line numbers to skip (it may be hidden)\n   * @return {number}\n   */\n  getMaximumAccumulatedByColumns(from = 0, to = this.daysCount, skipLines = []){\n    let max = 0;\n\n    for (let pointIndex = from; pointIndex < to; pointIndex++){\n      let stackValue = this.getStackForPoint(pointIndex, skipLines);\n\n      if (max < stackValue){\n        max = stackValue;\n      }\n    }\n\n    return max;\n  }\n\n  /**\n   * Returns chart type by name\n   * @param {string} chartName - \"y0\", \"y1\" etc\n   * @return {string} - \"line\", \"bar\", \"area\"\n   */\n  getOhterTypes(chartName){\n    return Object.keys(this.types).filter(type => type !== chartName);\n  }\n\n  /**\n   * Return maximum value from all charts\n   * @return {number}\n   */\n  get max(){\n    const maxPerLines = this.linesAvailable.map( name => {\n      return Math.max(...this.getLinePoints(name));\n    });\n\n    return Math.max(...maxPerLines);\n  }\n\n  /**\n   * Return maximum value for passed line\n   * @return {number}\n   */\n  maxForLine(name){\n    return Math.max(...this.getLinePoints(name));\n  }\n\n  /**\n   * Return minimum value from all charts\n   * @return {number}\n   */\n  get min(){\n    const minPerLines = this.linesAvailable.map( name => {\n      return Math.min(...this.getLinePoints(name));\n    });\n\n    return Math.min(...minPerLines);\n  }\n\n  /**\n   * Return minimum value for passed line\n   * @return {number}\n   */\n  minForLine(name){\n    return Math.min(...this.getLinePoints(name));\n  }\n\n  /**\n   * Return max value for line with start point and next N visible\n   */\n  getMaxForLineSliced(line, leftPointIndex, pointsVisible){\n    return Math.max(...this.getPointsSlice(line, leftPointIndex, pointsVisible));\n  }\n\n  /**\n   * Return min value for line with start point and next N visible\n   */\n  getMinForLineSliced(line, leftPointIndex, pointsVisible){\n    return Math.min(...this.getPointsSlice(line, leftPointIndex, pointsVisible));\n  }\n\n  /**\n   * Array of available colors\n   * @return {string[]}\n   */\n  get colorsList(){\n    return Object.entries(this.colors).map(([name, value]) => value);\n  }\n\n  /**\n   * Array of available chart names\n   * @return {string[]}\n   */\n  get namesList(){\n    return Object.entries(this.names).map(([name, value]) => value);\n  }\n\n  /**\n   * Stores previously calculated values to prevent do the same both for chart and for mini map\n   * @type {Array}\n   */\n  saveRecalculatedValues(values){\n    this._recalculatedPoints.push(values);\n  }\n\n  /**\n   * Dealloc used values\n   * @type {Array}\n   */\n  clearRecalculatedValues(){\n    this._recalculatedPoints = [];\n  }\n\n  get recalculatedValues(){\n    return this._recalculatedPoints;\n  }\n\n}","/**\n * Create HTML element\n * @param {string} tagName - HTML element tag name\n * @param {string[]|string} classNames - array of CSS classes\n * @param attributes - any attributes\n * @return {HTMLElement}\n */\nexport function make(tagName, classNames = undefined, attributes = {}) {\n  const svgNamespace = 'http://www.w3.org/2000/svg';\n  const svgElements = ['svg', 'path', 'rect', 'circle', 'text', 'g', 'animate'];\n  const isSvg = svgElements.includes(tagName);\n  const el = !isSvg ? document.createElement(tagName) : document.createElementNS(svgNamespace, tagName);\n\n  if (Array.isArray(classNames) && classNames.length) {\n    el.classList.add(...classNames);\n  } else if (classNames) {\n    el.className = classNames;\n  }\n\n  if (attributes && Object.keys(attributes).length) {\n    for (let attrName in attributes) {\n      if (attributes.hasOwnProperty(attrName)) {\n        el.setAttribute(attrName, attributes[attrName]);\n      }\n    }\n  }\n\n  return el;\n}\n\n/**\n * Inserts one element after another\n */\nexport function insertAfter(target, element) {\n  target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n/**\n * Insert one element before another\n */\nexport function insertBefore(target, element) {\n  target.parentNode.insertBefore(element, target);\n}\n\nexport function animateCounter(holder, val, prevVal, animateType = 'default'){\n  let prev = make('span', ['counter-prev', animateType]);\n  let cur = make('span', ['counter-cur', animateType]);\n\n  holder.style.width = val.length * 7 + 'px';\n\n  prev.textContent = prevVal;\n  cur.textContent = val;\n\n  holder.innerHTML = '';\n  holder.appendChild(prev);\n\n  holder.appendChild(cur);\n\n}","/**\n * Return pageX for passed Event\n * @param {MouseEvent|TouchEvent} event\n */\nexport function getPageX(event) {\n  if (event.touches){\n    return event.touches[0].pageX;\n  }\n\n  return event.pageX;\n}","import * as Dom from \"../utils/dom\";\n\n/**\n * Helper for creating an SVG path\n */\nexport default class Path {\n  constructor({canvasHeight, zeroShifting, color, kY, stroke, stepX, max, min, isScaled}){\n    this.canvasHeight = canvasHeight;\n    this.zeroShifting = zeroShifting;\n    this.kY = kY;\n    this.stepX = stepX;\n    this.prevX = 0;\n    this.max = max;\n    this.min = min;\n\n    // here will be stored current minimum value for 2-y axis charts\n    this.currentMinimum = 0;\n\n    this.path = Dom.make('path', null, {\n      'stroke-width' : stroke,\n      stroke : color,\n      fill : 'transparent',\n      'stroke-linecap' : 'round',\n      'stroke-linejoin' : 'round',\n      'vector-effect': 'non-scaling-stroke',\n    });\n\n    if (isScaled){\n      this.path.classList.add('scaled');\n    }\n\n    this.pathData = '';\n  }\n\n  /**\n   * CSS classes map\n   * @return {{graphHidden: string}}\n   */\n  static get CSS(){\n    return {\n      graphHidden: 'tg-graph--hidden',\n    }\n  }\n\n  /**\n   * Compute Y value with scaling\n   */\n  y(val){\n    return Math.round(this.canvasHeight - val * this.kY + this.zeroShifting);\n  }\n\n  /**\n   * Compute X value with scaling\n   */\n  x(val){\n    return val;\n  }\n\n  /**\n   * Go to passed coords\n   * @param {number} x\n   * @param {number} y\n   */\n  moveTo(x, y){\n    this.pathData += `M ${this.x(x)} ${this.y(y)}`;\n  }\n\n  /**\n   * Continue line to the next value\n   * @param {number} y\n   */\n  stepTo(y, skipStep){\n    if (!skipStep){\n      this.prevX = this.prevX + this.stepX;\n    }\n    this.pathData += ` L ${this.x(this.prevX)} ${this.y(y)}`;\n  }\n\n  /**\n   * Append a line\n   */\n  render(){\n    this.path.setAttribute('d', this.pathData);\n    return this.path;\n  }\n\n  get isHidden(){\n    return this.path.classList.contains(Path.CSS.graphHidden);\n  }\n\n  toggleVisibility(status){\n    this.path.classList.toggle(Path.CSS.graphHidden, status);\n  }\n}","import * as Dom from \"../utils/dom\";\n\n/**\n * Helper for creating an Bar charts\n */\nexport default class Bar {\n  constructor({canvasHeight, kY, stepX, key}){\n    this.canvasHeight = canvasHeight;\n    this.kY = kY;\n    this.key = key;\n\n    this.prevX = 0;\n    this.stepX = stepX;\n\n    this.wrapper = Dom.make('g');\n    this.wrapper.setAttribute('class', Bar.CSS.wrapper);\n    this.wrapper.setAttribute('vector-effect', 'non-scaling-stroke');\n    this.hidden = false;\n  }\n\n  getAll(){\n    return this.wrapper;\n  }\n\n  /**\n   * CSS classes map\n   * @return {{graphHidden: string}}\n   */\n  static get CSS(){\n    return {\n      wrapper: 'tg-bar',\n      graphHidden: 'tg-bar--hidden',\n    }\n  }\n\n  /**\n   * Compute Y value with scaling\n   */\n  y(val){\n    return this.canvasHeight - val * this.kY;\n  }\n\n  /**\n   * Compute X value with scaling\n   */\n  x(val){\n    return val;\n  }\n\n  /**\n   * Continue line to the next value\n   * @param {number} y\n   */\n  add(y, stackValue, prevValue, color){\n    let stackScaled = stackValue * this.kY;\n    let heightPrev = prevValue * this.kY;\n    let height = stackScaled - heightPrev;\n\n    const bar = Dom.make('rect');\n    bar.setAttribute('width', this.stepX);\n    bar.setAttribute('height', height);\n    bar.setAttribute('x', this.prevX);\n    bar.setAttribute('y', this.y(stackValue - prevValue));\n    bar.setAttribute('fill', color);\n\n    this.prevX = this.prevX + this.stepX;\n    // bar.setAttribute('stroke', color);\n    // bar.setAttribute('opacity', 0.6);\n\n\n    this.wrapper.appendChild(bar);\n  }\n\n  move(index, newStack, prevValue) {\n    let bar = this.wrapper.children[index];\n    let stackScaled = newStack * this.kY;\n    let heightPrev = prevValue * this.kY;\n    let height = stackScaled - heightPrev;\n\n    bar.setAttribute('height', height);\n    bar.setAttribute('y', this.y(newStack - prevValue));\n  }\n\n\n  get isHidden(){\n    return this.hidden;\n  }\n\n  toggleVisibility(status){\n    this.hidden = !this.hidden;\n    this.wrapper.classList.toggle(Bar.CSS.graphHidden, status);\n  }\n}","import * as Dom from \"../utils/dom\";\n\n/**\n * Helper for creating an Bar charts\n */\nexport default class Area {\n  constructor({canvasHeight, stepX, key, color}){\n    this.canvasHeight = canvasHeight;\n    this.key = key;\n    this.color = color;\n\n    this.prevX = 0;\n    this.stepX = stepX;\n    this.hidden = false;\n\n\n    this.path = this.createPath();\n    this.morphing = undefined;\n\n    this.pathData = [];\n  }\n\n  createPath(){\n    let path = Dom.make('path', null, {\n      fill : this.color,\n      'vector-effect': 'non-scaling-stroke',\n    });\n\n    path.classList.add(Area.CSS.path);\n\n    return path;\n  }\n\n  getAll(){\n    return this.path;\n  }\n\n  /**\n   * CSS classes map\n   * @return {{graphHidden: string}}\n   */\n  static get CSS(){\n    return {\n      path: 'tg-area',\n      graphHidden: 'tg-area--hidden',\n    }\n  }\n\n  /**\n   * Compute Y value with scaling\n   */\n  y(val){\n    return this.canvasHeight - val;\n  }\n\n  /**\n   * Compute X value with scaling\n   */\n  x(val){\n    return val;\n  }\n\n  percentToValue(per){\n    return this.canvasHeight / 100 * per;\n  }\n\n  valueToPercent(val, total){\n    return 100 / total * val;\n  }\n\n  /**\n   * Go to passed coords\n   * @param {number} x\n   * @param {number} y\n   */\n  moveTo(x, y, total = 0){\n    let valueInPercents = total ? this.valueToPercent(y, total) : y;\n    this.pathData.push(`M ${x} ${this.percentToValue(valueInPercents)}`);\n  }\n\n  /**\n   * Continue line to the next value\n   * @param {number} total - this value is 100% for all charts\n   */\n  stepTo(total, prev, skip = false){\n    let prevPercents = 100 / total * prev;\n\n    /**\n     * Case for empty (zero) value\n     */\n    if (isNaN(prevPercents)){\n      prevPercents = 100;\n    }\n\n\n    let percentage = this.percentToValue(100 - prevPercents);\n    // console.log('current per %o | 100% is %o | prev percents is %o | -->', curPercents, total, prevPercents, percentage);\n    if (!skip) {\n      this.prevX = this.prevX + this.stepX;\n    }\n    this.pathData.push(`L ${this.x(this.prevX)} ${this.y(percentage)}`);\n  }\n\n  /**\n   * Recalculate Y coordinate\n   * @param {number} y\n   * @param {number} total - this value is 100% for all charts\n   */\n  move(index, total, prev){\n    let pointToChange = this.pathData[index + 1]; // +1 to skip M value\n    let [l, x, y] = pointToChange.trim().split(' ');\n\n    let prevPercents, percentage;\n\n    if (total > 0){\n      prevPercents = 100 / total * prev;\n      percentage = this.percentToValue(100 - prevPercents);\n    } else {\n      percentage = this.percentToValue(0 );\n    }\n\n    this.pathData[index + 1] = ` L ${x} ${this.y(percentage)}`;\n  }\n\n  update(){\n    this.morphing = Dom.make('animate');\n    this.morphing.setAttribute('attributeName', 'd');\n    this.morphing.setAttribute('attributeType', 'XML');\n    this.morphing.setAttribute('dur', '170ms');\n    this.morphing.setAttribute('fill', 'freeze');\n    this.morphing.setAttribute('to', this.pathData.join(' '));\n    this.path.appendChild(this.morphing);\n    this.morphing.beginElement();\n  }\n\n  /**\n   * Append a line\n   */\n  finish(){\n    this.pathData.push(`L ${this.x(this.prevX)} ${this.canvasHeight} 0 ${this.canvasHeight} 0 0`);\n    this.path.setAttribute('d', this.pathData.join(' '));\n  }\n\n  get isHidden(){\n    return this.hidden;\n  }\n\n  toggleVisibility(status){\n    this.hidden = !this.hidden;\n    this.path.classList.toggle(Area.CSS.graphHidden, status);\n  }\n}","import * as Dom from '../utils/dom';\nimport Path from './path';\nimport Bar from './bar';\nimport Area from './area';\nimport * as Numbers from \"../utils/numbers\";\n\nimport log from '../utils/log.js';\n\n\n/**\n * Working with svg paths for charts\n */\nexport default class Graph {\n  /**\n   * @param {Graphon} modules\n   */\n  constructor(modules, {stroke}){\n    /**\n     * Width of date label is used for default stepX value in 1:1 scale\n     * @type {number}\n     */\n    const dateLabelWidth = 45;\n\n    this.modules = modules;\n\n    /**\n     * @todo move to this.nodes\n     */\n    this.canvas = undefined;\n\n    /**\n     * Transformations on OY\n     */\n    this.oyGroup = undefined;\n\n    /**\n     * Transformations on OX\n     */\n    this.oxGroup = undefined;\n\n    this.stepX = dateLabelWidth;\n    this.stepY = 10;\n    this.strokeWidth = stroke;\n    this.initialWidth = undefined;\n    this.maxPoint = 0;//\n    this.minPoint = 0;\n\n    /**\n     * [ canvas height / (Max - Min) ]\n     * Ratio from 1:1 scale to fit min (on zero-axis) and max (on top Y axis)\n     */\n    this.kY = 1;\n\n    /**\n     * [ min point * kY ]\n     * On how much we should move down chart to make min-point hit zero-axis\n     */\n    this.zeroShifting = 0;\n\n    /**\n     * What point is currently fit zero-axis;\n     */\n    this.currentMinimum = 0;\n\n    /**\n     * [ new kY / original kY ]\n     * How much the original kY is changed to fit new min & max points\n     */\n    this.oyScaling = 1;\n\n    /**\n     * [ original shift / new shift ]\n     * How much the original zero axis shifting is changed to fit new min & max points\n     */\n    this.zeroShiftingScaling = 1;\n\n\n\n    /**\n     * List of drawn charts\n     * @type {object} name -> Path\n     */\n    this.charts = {};\n\n    /**\n     * Cache for canvas width and height values\n     * @type {number}\n     * @private\n     */\n    this._width = 0;\n    this._height = 0;\n  }\n\n  static get CSS(){\n    return {\n      oxGroup: 'ox-group',\n      oyGroup: 'oy-group',\n    }\n  }\n\n  /**\n   * How much the original ratio of height to max-min is changed to fit new min & max points\n   * @return {number}\n   */\n  get kYScaled(){\n    return this.kY * this.oyScaling;\n  }\n\n  /**\n   * Prepares the SVG element\n   * @param {number} [width] - strict canvas width\n   * @param {number} [height] - strict canvas height\n   * @return {SVGElement}\n   */\n  renderCanvas({width, height} = {}){\n    this.canvas = Dom.make('svg');\n    this.oxGroup = Dom.make('g');\n    this.oyGroup = Dom.make('g');\n\n    this.oxGroup.setAttribute('class', Graph.CSS.oxGroup);\n    this.oyGroup.setAttribute('class', Graph.CSS.oyGroup);\n    this.oyGroup.setAttribute('vector-effect', 'non-scaling-stroke');\n    this.oxGroup.setAttribute('vector-effect', 'non-scaling-stroke');\n\n    if (!width){\n      this.computeInitialWidth();\n    } else {\n      this.width = this.initialWidth = width;\n    }\n\n    if (height){\n      this.height = height;\n    }\n\n    this.computeSteps();\n\n    this.oyGroup.appendChild(this.oxGroup);\n    this.canvas.appendChild(this.oyGroup);\n\n    return this.canvas;\n  }\n\n  /**\n   * Compute and set initial canvas width\n   */\n  computeInitialWidth(){\n    this.initialWidth = (this.modules.state.daysCount - 1) * this.stepX;\n    this.width = this.initialWidth;\n  }\n\n  /**\n   * Return total (big) chart width\n   * @return {number}\n   */\n  get width(){\n    return this._width;\n  }\n\n  /**\n   * Set canvas width\n   * @param {number} val\n   */\n  set width(val){\n    this._width = val;\n    this.canvas.style.width = val + 'px';\n  }\n\n  /**\n   * Return chart height\n   * @return {number}\n   */\n  get height(){\n    return this._height;\n  }\n\n  /**\n   * Set canvas height\n   * @param {number} val\n   */\n  set height(val){\n    this._height = val;\n    this.canvas.style.height = val + 'px';\n  }\n\n  /**\n   * Calculates stepX by canvas width and total points count\n   */\n  computeSteps(){\n    if (this.modules.state.byMonth){\n      if (this.modules.state.type === 'bar'){\n        this.stepX = this.width / (this.modules.state.daysCount);\n      } else {\n        this.stepX = this.width / (this.modules.state.daysCount - 1);\n      }\n    } else {\n      this.stepX = this.width / (this.modules.state.daysCount + 1);\n    }\n\n    /**\n     * All lines maximum value\n     */\n    const max = this.modules.state.max;\n    const min = this.modules.state.min;\n    const stepsAvailable = [5, 10, 25, 50, 100, 1000, 500, 10000, 5000, 100000, 1000000, 10000000];\n    let newStepYIndex = stepsAvailable.reverse().findIndex( (step) => {\n      let c = (max - min) > step;\n\n      return c;\n    }),\n    newStepY = stepsAvailable[newStepYIndex];\n\n    if (max / newStepY < 3 && newStepYIndex < stepsAvailable.length - 1){\n      newStepY = stepsAvailable[newStepYIndex + 1];\n    }\n\n    this.stepY = newStepY;\n  }\n\n  renderCharts(){\n    const type = this.modules.state.getCommonChartsType();\n\n    switch (type){\n      case 'bar':\n        this.maxPoint = this.modules.state.getMaximumAccumulatedByColumns(); // 20% for padding top\n        this.minPoint = this.modules.state.min;\n        this.drawBarCharts();\n        break;\n      case 'area':\n        this.maxPoint = this.modules.state.getMaximumAccumulatedByColumns(); // 20% for padding top\n        this.drawAreaCharts();\n        break;\n      default:\n      case 'line':\n        if (!this.modules.state.isYScaled) {\n          this.maxPoint = this.modules.state.max;\n          this.minPoint = this.modules.state.min;\n\n          this.drawLineCharts();\n        } else {\n          this.drawScaledLineCharts();\n        }\n\n        break;\n    }\n  }\n\n  drawAreaCharts(){\n    let areas = this.modules.state.linesAvailable.reverse().map( line => {\n      return new Area({\n        canvasHeight: this.height,\n        stepX: this.stepX,\n        key: line,\n        color: this.modules.state.getLineColor(line)\n      });\n    });\n\n    const pointsCount = this.modules.state.daysCount;\n    const stacks = this.modules.state.getStacks();\n\n    this.modules.state.linesAvailable.reverse().forEach( (line, index) => {\n      areas[index].moveTo(0, this.modules.state.getLinePoints(line)[0], stacks[0]);\n    });\n\n\n    for (let pointIndex = 0; pointIndex < pointsCount; pointIndex++) {\n      let prevValue = 0;\n\n      this.modules.state.linesAvailable.reverse().forEach( (line, index) => {\n        let pointValue = this.modules.state.getLinePoints(line)[pointIndex];\n\n        if (pointIndex === 0){\n          areas[index].stepTo(stacks[pointIndex], prevValue, true);\n        } else {\n          areas[index].stepTo(stacks[pointIndex], prevValue);\n        }\n\n        prevValue += pointValue;\n      });\n    }\n\n    areas.forEach(area => {\n      area.finish();\n      this.oxGroup.appendChild(area.getAll());\n      this.charts[area.key] = area;\n    });\n  }\n\n  drawBarCharts(){\n    const kY = this.maxPoint !== 0 ? this.height / this.maxPoint : 1;\n    let barmens = this.modules.state.linesAvailable.reverse().map( line => {\n      return new Bar({\n        canvasHeight: this.height,\n        stepX: this.stepX,\n        kY,\n        key: line\n      });\n    });\n\n    const pointsCount = this.modules.state.daysCount;\n    const stacks = this.modules.state.getStacks();\n\n    for (let pointIndex = 0; pointIndex < pointsCount; pointIndex++) {\n      let prevValue = 0;\n\n      this.modules.state.linesAvailable.reverse().forEach( (line, index) => {\n        const color = this.modules.state.getLineColor(line);\n\n\n\n        let pointValue = this.modules.state.getLinePoints(line)[pointIndex];\n\n        // const editorLabelStyle = `line-height: 1em;\n        //     color: #fff;\n        //     display: inline-block;\n        //     font-size: 12px;\n        //     line-height: 1em;\n        //     background-color: ${color};\n        //     padding: 4px 9px;\n        //     border-radius: 30px;\n        //     margin: 4px 5px 4px 0;`;\n        // console.log(`%c${pointValue}`, editorLabelStyle);\n\n\n        barmens[index].add(pointValue, stacks[pointIndex], prevValue, color);\n        prevValue += pointValue;\n      });\n\n\n\n      // console.log('%o -> stack %o', pointIndex, stackValue);\n    }\n\n    barmens.forEach(barmen => {\n      this.oxGroup.appendChild(barmen.getAll());\n      this.charts[barmen.key] = barmen;\n    });\n  }\n\n  /**\n   * Return names of hidden charts\n   */\n  get hiddenCharts(){\n    return Object.entries(this.charts).filter(([name, chart]) => chart.isHidden).map(([name]) => name);\n  }\n\n  /**\n   * Return max visible point\n   * If line passed, check for that. Otherwise, return maximum between all\n   */\n  getMaxFromVisible(leftPointIndex = 0, pointsVisible = this.modules.state.daysCount, line = undefined){\n    const type = this.modules.state.getCommonChartsType();\n\n    switch (type) {\n      case 'bar':\n        return this.modules.state.getMaximumAccumulatedByColumns(leftPointIndex, leftPointIndex + pointsVisible, this.hiddenCharts);\n        break;\n      default:\n      case 'line':\n        if (!line) {\n          return Math.max(...this.modules.state.linesAvailable.filter(line => this.checkPathVisibility(line)).map(line => {\n            return this.modules.state.getMaxForLineSliced(line, leftPointIndex, pointsVisible);\n          }));\n        }\n\n        return this.modules.state.getMaxForLineSliced(line, leftPointIndex, pointsVisible, line);\n        break;\n    }\n  }\n\n  drawScaledLineCharts(){\n    this.modules.state.linesAvailable.forEach( name => {\n      const lineMin = this.modules.state.minForLine(name);\n      const lineMax = this.modules.state.maxForLine(name);\n      const values = this.modules.state.getLinePoints(name);\n\n      // console.log('[%o] min %o max %o', name, lineMin, lineMax);\n\n      let kY = this.height / (lineMax - lineMin);\n      let zeroShifting = lineMin * kY;\n\n      /**\n       * Create a Path instance\n       */\n      const path = new Path({\n        canvasHeight: this.height,\n        isScaled: this.modules.state.isYScaled,\n        max: lineMax,\n        color: this.modules.state.getLineColor(name),\n        zeroShifting,\n        kY,\n        stroke: this.strokeWidth,\n        stepX: this.stepX,\n      });\n\n      path.moveTo(0, values[0]);\n\n      values.forEach( (column, index )=> {\n        if (index === 0){\n          path.stepTo(column, true);\n        } else {\n          path.stepTo(column);\n        }\n      });\n\n      this.oxGroup.appendChild(path.render());\n\n      this.charts[name] = path;\n\n    });\n  }\n\n  /**\n   * Create a 'line' charts\n   */\n  drawLineCharts(){\n    this.modules.state.linesAvailable.forEach( name => {\n      /**\n       * Array of chart Y values\n       */\n      const values = this.modules.state.getLinePoints(name);\n\n      /**\n       * Color of drawing line\n       */\n      const color = this.modules.state.getLineColor(name);\n\n      /**\n       * Point to from which we will start drawing\n       */\n      const leftPoint = values[0];\n\n      this.kY = this.height / (this.maxPoint - this.minPoint);\n      this.zeroShifting = this.minPoint * this.kY;\n\n      /**\n       * Create a Path instance\n       */\n      const path = new Path({\n        canvasHeight: this.height,\n        max: this.maxPoint,\n        min: this.minPoint,\n        color,\n        zeroShifting: this.zeroShifting,\n        kY: this.kY,\n        stroke: this.strokeWidth,\n        stepX: this.stepX,\n      });\n\n      path.moveTo(0, leftPoint);\n\n      values.forEach( (column, index )=> {\n        if (index === 0){\n          path.stepTo(column, true);\n        } else {\n          path.stepTo(column);\n        }\n      });\n\n      this.oxGroup.appendChild(path.render());\n\n      this.charts[name] = path;\n    });\n  }\n\n  scroll(newLeft){\n    this.oxGroup.style.transform = `matrix(${this.modules.chart.scaling},0,0,1,${newLeft},0)`;\n  }\n\n  /**\n   * Scale left legend\n   * @param {number} scaling\n   */\n  scaleLines(scaling){\n    this.oxGroup.style.transform = `scaleX(${scaling})`;\n    this.width = this.initialWidth * scaling;\n  }\n\n  get step(){\n    return this.stepX;\n  }\n\n  /**\n   * Scale path on OY\n   * @param {number} newMax - new max value\n   */\n  scaleToMaxPoint(newMax, newMin, line){\n    // console.log('newMax, newMin, line', newMax, newMin, line);\n    // newMax = Numbers.round(newMax);\n    // console.warn('min', newMin, Numbers.roundToMin(newMin, (newMax - newMin) / 5));\n\n\n    newMin = Numbers.roundToMin(newMin, (newMax - newMin) / 5);\n\n\n    let max, kY, zeroShifting;\n\n    if (!this.modules.state.isYScaled){\n      max = this.maxPoint;\n      kY = this.kY;\n\n      // area and bars\n      if (!this.zeroShifting || !newMin){\n        this.oyScaling = max / newMax;\n        this.oyGroup.style.transform = `scaleY(${this.oyScaling})`;\n        return;\n      }\n\n      let newKY = this.height / (newMax - newMin);\n      let newZeroShifting = newMin * kY;\n      let shift = newZeroShifting - this.zeroShifting;\n\n      this.oyScaling = newKY / kY;\n      this.zeroShiftingScaling = shift !== 0 ? newZeroShifting / this.zeroShifting  : 1;\n      this.currentMinimum = newMin;\n\n      this.oyGroup.style.transform = `scaleY(${this.oyScaling}) translateY(${shift}px)`;\n\n    } else {\n      const chart = this.charts[line];\n      max = chart.max;\n      kY = chart.kY;\n      zeroShifting = chart.zeroShifting;\n\n\n      let newKY = this.height / (newMax - newMin);\n      let newZeroShifting = newMin * kY;\n      let shift = newZeroShifting - zeroShifting;\n\n      // need to store somewhere\n      let oyScaling = newKY / kY;\n      let zeroShiftingScaling = shift !== 0 ? newZeroShifting / zeroShifting  : 1;\n      chart.currentMinimum = newMin;\n\n      chart.path.style.transform = `scaleY(${oyScaling}) translateY(${shift}px)`;\n      // chart.path.setAttribute('transform', `scale(1 ${oyScaling}) translate(0, ${shift})`);\n    }\n  }\n\n  /**\n   * Change bars height and Y to fit hidden charts place\n   */\n  recalculatePointsHeight(useRecalculated = false){\n    if (this.modules.state.type === 'bar'){\n      this.recalculateBars(useRecalculated);\n    } else if (this.modules.state.type === 'area') {\n      this.recalculateArea(useRecalculated);\n    }\n  }\n\n  recalculateArea(useRecalculated = false){\n    const pointsCount = this.modules.state.daysCount;\n    const stacks = this.modules.state.getStacks();\n\n    let recalculated = this.modules.state.recalculatedValues;\n\n    if (useRecalculated && recalculated) {\n      for (let i = 0, lenCached = recalculated.length; i < lenCached; i++) {\n        if (recalculated[i][1] === 0){\n          this.charts[recalculated[i][0]].move(recalculated[i][1], recalculated[i][2], recalculated[i][3], true);\n        } else {\n          this.charts[recalculated[i][0]].move(recalculated[i][1], recalculated[i][2], recalculated[i][3]);\n        }\n      }\n\n      this.modules.state.clearRecalculatedValues();\n      return;\n    }\n\n    let lines = this.modules.state.linesAvailable.filter(line => this.checkPathVisibility(line)).reverse();\n\n    for (let pointIndex = 0; pointIndex < pointsCount; pointIndex++) {\n      let prevValue = 0;\n      let hiddenPointsValue = this.hiddenCharts.reduce( (val, line) => {\n        return val + this.modules.state.getLinePoints(line)[pointIndex];\n      }, 0);\n\n      for (let i = 0, lenCached = lines.length; i < lenCached; i++) {\n        let newStack = stacks[pointIndex] - hiddenPointsValue;\n        let pointValue = this.modules.state.getLinePoints(lines[i])[pointIndex];\n\n        this.modules.state.saveRecalculatedValues([lines[i], pointIndex, newStack, prevValue]);\n\n        if (pointIndex === 0){\n          this.charts[lines[i]].move(pointIndex, newStack, prevValue, true);\n        } else {\n          this.charts[lines[i]].move(pointIndex, newStack, prevValue);\n        }\n\n        prevValue += pointValue;\n      }\n    }\n\n    Object.entries(this.charts).filter(([line, area]) => this.checkPathVisibility(line)).forEach(([line, area]) => {\n      area.update();\n    });\n  }\n\n  /**\n   * Changes bars heights to correspond hidden charts\n   * @param {boolean} useRecalculated - pass true to use saved value (minimap can use values from main Chart)\n   */\n  recalculateBars(useRecalculated = false){\n    const pointsCount = this.modules.state.daysCount;\n    const stacks = this.modules.state.getStacks();\n\n    let recalculated = this.modules.state.recalculatedValues;\n\n    if (useRecalculated && recalculated) {\n      for (let i = 0, lenCached = recalculated.length; i < lenCached; i++) {\n        this.charts[recalculated[i][0]].move(recalculated[i][1], recalculated[i][2], recalculated[i][3]);\n      }\n\n      this.modules.state.clearRecalculatedValues();\n      return;\n    }\n\n    let lines = this.modules.state.linesAvailable.filter(line => this.checkPathVisibility(line)).reverse();\n\n    for (let pointIndex = 0; pointIndex < pointsCount; pointIndex++) {\n      let prevValue = 0;\n\n      let hiddenPointsValue = this.hiddenCharts.reduce( (val, line) => {\n        return val + this.modules.state.getLinePoints(line)[pointIndex];\n      }, 0);\n\n      for (let i = 0, lenCached = lines.length; i < lenCached; i++) {\n        let newStack = stacks[pointIndex] - hiddenPointsValue;\n        let pointValue = this.modules.state.getLinePoints(lines[i])[pointIndex];\n\n\n        this.modules.state.saveRecalculatedValues([lines[i], pointIndex, newStack, prevValue]);\n        this.charts[lines[i]].move(pointIndex, newStack, prevValue);\n\n        prevValue += pointValue;\n      }\n    }\n  }\n\n  checkPathVisibility(name){\n    return !this.charts[name].isHidden;\n  }\n\n  togglePathVisibility(name, status){\n    this.charts[name].toggleVisibility(status);\n  }\n}","export function round(number) {\n  let zeros = Math.log10(number) >> 0;\n  let rounding = Math.pow(10, zeros);\n\n  return Math.round(number / rounding) * rounding;\n}\n\nexport function roundToMin(number, maxSlicing) {\n  let zeros = Math.log10(number) >> 0;\n  let rounding = Math.pow(10, zeros);\n  let result = Math.floor(number / rounding) * rounding;\n\n  // console.log(number, ' -> zeros', zeros, 'r' , rounding, maxSlicing);\n\n  if (number - result > maxSlicing){\n    // let old  =result;\n    rounding = Math.pow(10, zeros - 1);\n    result = Math.floor(number / rounding) * rounding;\n    // console.warn('descreasing', old, result)\n  }\n\n  return result;\n}\n\nexport function beautify(number) {\n  if (number < 1000) {\n    return number\n  } else if (number < 10000){\n      let thousands = Math.floor(number / 1000);\n      let left = number - thousands * 1000;\n\n      if (left === 0){\n        return thousands + ' 000';\n      } else if (left >= 100){\n        return thousands + ' ' + left;\n      } else if (left > 10) {\n        return thousands + ' 0' + left;\n      } else {\n        return thousands + ' 0' + left;\n      }\n  } else if (number < 1000000) {\n      return Math.floor(number / 1000) + 'k';\n  } else {\n    return Math.floor(number / 1000000) + 'M';\n  }\n}\n\n/**\n * 1000 -> 1 000\n * @param {number} number\n * @return {string}\n */\nexport function addSpaces(number) {\n  if (isNaN(parseInt(number, 10))){\n    return '';\n  }\n\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n}\n","import * as Dom from '../utils/dom.js';\nimport * as Event from '../utils/event.js';\nimport debounce from '../utils/debounce.js';\nimport Graph from './graph.js';\nimport log from '../utils/log.js';\n\n\n/**\n * Module for working with Chart Mini map\n * - Render UI\n * - Render graphs\n * - Scaling\n * - Scrolling\n */\nexport default class Minimap {\n  /**\n   * Graphon\n   * @param modules\n   */\n  constructor(modules){\n    this.modules = modules;\n    this.nodes = {\n      wrapper: undefined,\n      canvas: undefined,\n\n      leftZone: undefined,\n      leftZoneScaler: undefined,\n      rightZone: undefined,\n      rightZoneScaler: undefined,\n      centerZone: undefined\n    };\n\n    this.wrapperWidthCached = undefined;\n    this.viewportWidth = 100;\n    this.viewportWidthInitial = 100;\n    this.viewportOffsetLeft = 0;\n    this.scalerWidth = 14;\n\n    /**\n     * Remember width on touch start\n     */\n    this.viewportWidthBeforeDrag = undefined;\n\n    /**\n     * Clicked pageX\n     */\n    this.moveStartX = undefined;\n\n    /**\n     * Clicked layerX\n     */\n    this.wrapperLeftCoord = undefined;\n\n    /**\n     * Indicator that viewport zone is dragged\n     */\n    this.viewportPressed = false;\n\n    /**\n     * Indicator that left scaler zone is dragged\n     */\n    this.leftScalerClicked = false;\n\n    /**\n     * Indicator that right scaler zone is dragged\n     */\n    this.rightScalerClicked = false;\n\n    /**\n     * Scale debounce\n     */\n    this.scaleDebounce = undefined;\n\n    /**\n     * Cache for zones size\n     */\n    this.leftZoneWidth = 0;\n    this.rightZoneWidth = 0;\n\n    /**\n     * Wrapper rect cache\n     * @type {ClientRect}\n     */\n    this.wrapperRect = null;\n\n    this.prevX = 0;\n\n    this.graph = new Graph(this.modules, {\n      stroke: 1,\n      animate: true\n    });\n  }\n\n  static get CSS(){\n    return {\n      wrapper: 'tg-minimap',\n      leftZone: 'tg-minimap__left',\n      leftZoneScaler: 'tg-minimap__left-scaler',\n      rightZone: 'tg-minimap__right',\n      rightZoneScaler: 'tg-minimap__right-scaler',\n      centerZone: 'tg-minimap__center',\n    }\n  }\n\n  /**\n   * Prepares minimap UI\n   * @return {Element}\n   */\n  renderUi(){\n    this.nodes.wrapper = Dom.make('div', Minimap.CSS.wrapper);\n    this.nodes.leftZone = Dom.make('div', Minimap.CSS.leftZone);\n    this.nodes.centerZone = Dom.make('div', Minimap.CSS.centerZone);\n    this.nodes.rightZone = Dom.make('div', Minimap.CSS.rightZone);\n    this.nodes.leftZoneScaler = Dom.make('div', Minimap.CSS.leftZoneScaler);\n    this.nodes.rightZoneScaler = Dom.make('div', Minimap.CSS.rightZoneScaler);\n\n    this.nodes.leftZone.appendChild(this.nodes.leftZoneScaler);\n    this.nodes.rightZone.appendChild(this.nodes.rightZoneScaler);\n\n    this.nodes.wrapper.appendChild(this.nodes.leftZone);\n    this.nodes.wrapper.appendChild(this.nodes.centerZone);\n    this.nodes.wrapper.appendChild(this.nodes.rightZone);\n\n    /**\n     * Wait dom appending\n     */\n    setTimeout(() => {\n      this.wrapperRect = this.nodes.wrapper.getBoundingClientRect();\n    }, 100);\n\n    this.bindEvents();\n\n    return this.nodes.wrapper;\n  }\n\n  /**\n   * Fill UI with chart and set initial Position\n   */\n  renderMap(){\n    if (this.nodes.canvas){\n      this.nodes.canvas.remove();\n    }\n\n    this.nodes.canvas = this.graph.renderCanvas({\n      width: this.nodes.wrapper.offsetWidth - 2,  // 2 for borders\n      height: this.nodes.wrapper.offsetHeight - 2\n    });\n\n    this.graph.renderCharts();\n\n    this.setInitialPosition();\n\n    this.nodes.wrapper.appendChild(this.nodes.canvas);\n  }\n\n  /**\n   * Return width of a mini map\n   * @return {number}\n   */\n  get wrapperWidth(){\n    return this.wrapperWidthCached || this.nodes.wrapper.offsetWidth;\n  }\n\n  /**\n   * Compute current minimap width\n   * @return {number}\n   */\n  get width(){\n    return this.wrapperWidth - this.leftZoneWidth - this.rightZoneWidth;\n  }\n\n  /**\n   * Left zone width setter\n   */\n  set leftWidth(val){\n    this.leftZoneWidth = val;\n    this.nodes.leftZone.style.width = val + 'px';\n    this.nodes.centerZone.style.left = val + this.scalerWidth + 'px';\n  }\n\n  /**\n   * Right zone width setter\n   */\n  set rightWidth(val){\n    this.rightZoneWidth = val;\n    this.nodes.rightZone.style.width = val + 'px';\n  }\n\n  /**\n   * Set new with to the minimap's viewport\n   * @param {number} value\n   */\n  set width(value){\n    const scrollDistance = this.modules.chart.scrollDistance;\n\n    this.leftWidth = scrollDistance;\n    this.rightWidth = this.wrapperWidth - scrollDistance - value;\n\n    this.viewportWidth = value;\n    this.centerWidth = value;\n  }\n\n  set centerWidth(value){\n    this.nodes.centerZone.style.width = (value - this.scalerWidth*2) + 'px';\n  }\n\n  /**\n   * Initial width and offset\n   */\n  setInitialPosition(){\n    let rect = this.nodes.wrapper.getBoundingClientRect();\n    this.wrapperWidthCached = rect.width;\n    this.wrapperLeftCoord = rect.left;\n\n    this.width = this.modules.chart.minimalMapWidth;\n\n    this.viewportWidthInitial = this.viewportWidthBeforeDrag = this.width;\n    this.viewportOffsetLeft = this.wrapperWidth - this.viewportWidthInitial;\n    this.moveViewport(this.viewportOffsetLeft);\n    this.syncScrollWithChart(this.viewportOffsetLeft);\n    this.modules.chart.fitToMax();\n  }\n\n  /**\n   * Current scroll value\n   * @return {number}\n   */\n  get scrolledValue(){\n    return this.leftZoneWidth;\n  }\n\n  /**\n   * Value of left zone width minimum\n   */\n  get leftZoneMinimumWidth(){\n    return 0;\n  }\n\n  /**\n   * Value of left zone width maximum\n   */\n  get leftZoneMaximumWidth(){\n    return this.wrapperWidth - this.viewportWidthInitial - this.rightZoneWidth;\n  }\n\n  /**\n   * Value of right zone width minimum\n   */\n  get rightZoneMinimumWidth(){\n    return this.viewportWidthInitial;\n  }\n\n  /**\n   * Value of right zone width maximum\n   */\n  get rightZoneMaximumWidth(){\n    return this.wrapperWidth - this.viewportWidthInitial - this.scrolledValue;\n  }\n\n  /**\n   * Moves viewport from left for passed value\n   * @param {string} offsetLeft\n   */\n  moveViewport(offsetLeft){\n    // log({offsetLeft})\n    const width = this.width;\n    const maxLeft = this.wrapperWidth - width;\n    const minLeft = this.leftZoneMinimumWidth;\n\n    let newLeft = this.viewportOffsetLeft + offsetLeft;\n\n    if (newLeft < minLeft){\n      newLeft = minLeft;\n    } else if (newLeft > maxLeft){\n      newLeft = maxLeft;\n    }\n    this.leftWidth = newLeft;\n    this.rightWidth = this.wrapperWidth - this.viewportWidthBeforeDrag - newLeft;\n  }\n\n  bindEvents(){\n    let supportsPassive = false;\n    try {\n      let opts = Object.defineProperty({}, 'passive', {\n        get: function() {\n          supportsPassive = true;\n        }\n      });\n      window.addEventListener(\"testPassive\", null, opts);\n      window.removeEventListener(\"testPassive\", null, opts);\n    } catch (e) {}\n\n\n    this.nodes.wrapper.addEventListener('mousedown', (event) => {\n      this.viewportMousedown(event);\n    }, supportsPassive ? { passive: true } : false);\n\n    window.addEventListener('mousemove', (event) => {\n      this.viewportMousemove(event);\n    }, supportsPassive ? { passive: true } : false);\n\n    window.addEventListener('mouseup', (event) => {\n      this.viewportMouseup(event);\n    }, supportsPassive ? { passive: true } : false);\n\n    this.nodes.wrapper.addEventListener('touchstart', (event) => {\n      this.viewportMousedown(event);\n    }, supportsPassive ? { passive: true } : false);\n\n    this.nodes.wrapper.addEventListener('touchmove', (event) => {\n      this.viewportMousemove(event);\n    }, supportsPassive ? { passive: true } : false);\n\n    this.nodes.wrapper.addEventListener('touchend', (event) => {\n      this.viewportMouseup(event);\n    }, supportsPassive ? { passive: true } : false);\n  }\n\n  /**\n   * Viewport under finger\n   * @param {MouseEvent|TouchEvent} event\n   */\n  viewportMousedown(event){\n    const {target} = event;\n\n    // event.preventDefault();\n\n    const leftScalerClicked = !!target.closest(`.${Minimap.CSS.leftZoneScaler}`);\n    const rightScalerClicked = !!target.closest(`.${Minimap.CSS.rightZoneScaler}`);\n\n    this.viewportWidthBeforeDrag = this.width;\n    this.moveStartX = Event.getPageX(event);\n\n    if (leftScalerClicked || rightScalerClicked){\n      this.leftScalerClicked = leftScalerClicked;\n      this.rightScalerClicked = rightScalerClicked;\n      this.viewportPressed = false;\n      return;\n    }\n\n\n    this.viewportPressed = true;\n  }\n\n  /**\n   * Viewport dragged\n   * @param {MouseEvent} event\n   */\n  viewportMousemove(event){\n    if (this.viewportPressed){\n      this.viewportDragged(event);\n    } else if (this.leftScalerClicked){\n      this.scalerDragged(event, 'left');\n    } else if (this.rightScalerClicked){\n      this.scalerDragged(event, 'right');\n    }\n  }\n\n  viewportMouseup(){\n    if (this.viewportPressed){\n      this.finishSliding();\n    } else if (this.leftScalerClicked){\n      this.finishLeftScaling();\n    } else if (this.rightScalerClicked){\n      this.finishRightScaling();\n    }\n  }\n\n  finishSliding(){\n    this.viewportPressed = false;\n    this.viewportOffsetLeft = this.scrolledValue;\n\n\n    // let start = null;\n    //\n    // // console.log('direction', direction);\n    //\n    // let step = (timestamp) => {\n    //   if (!start) start = timestamp;\n    //   var progress = timestamp - start;\n    //   let forTo = Math.min(progress / this.prevX, 500);\n    //\n    //   console.log('forTo', this.prevX, progress);\n    //\n    //   // console.log('progress', progress);\n    //   this.moveViewport(forTo * 5);\n    //   // element.style.transform = 'translateX(' + Math.min(progress / 10, 200) + 'px)';\n    //   if (progress < 100) {\n    //     window.requestAnimationFrame(step);\n    //   }\n    // }\n\n    // window.requestAnimationFrame(step);\n  }\n\n  finishLeftScaling(){\n    this.leftScalerClicked = false;\n    this.viewportOffsetLeft = this.scrolledValue;\n  }\n\n  finishRightScaling(){\n    this.rightScalerClicked = false;\n    this.viewportOffsetLeft = this.scrolledValue;\n  }\n\n  /**\n   * @param {MouseEvent} event\n   */\n  viewportDragged(event){\n    let delta = Event.getPageX(event) - this.moveStartX;\n\n    // let direction = this.prevX < delta ? 'right' : 'left';\n\n    let prevScrolledValue = this.scrolledValue;\n\n    // this.prevX = delta + 0;\n    this.moveViewport(delta);\n    // console.log('delta', delta);\n    // this.modules.chart.scrollByDelta((prevScrolledValue - delta) * this.modules.chart.width / this.wrapperWidth );\n\n    this.syncScrollWithChart();\n\n    if (this._ftmd){\n      clearTimeout(this._ftmd);\n    }\n\n    this._ftmd = setTimeout(() => {\n      this.modules.chart.fitToMax(true);\n    }, 50)\n\n  }\n\n  /**\n   * Sync scroll between minimap and chart\n   * @param {number} [newScroll] - pass scroll if you have\n   */\n  syncScrollWithChart(newScroll = null, fromScale = false){\n    // console.log('this.scrolledValue', this.scrolledValue);\n    /**\n     * How many percents of mini-map is scrolled\n     */\n    let scrolledValue = !isNaN(parseInt(newScroll)) ? newScroll : this.scrolledValue;\n    const minimapScrolledPortion = scrolledValue / this.wrapperWidth;\n    const chartScroll = minimapScrolledPortion * this.modules.chart.width;\n\n    this.modules.chart.scroll(chartScroll, fromScale);\n  }\n\n  /**\n   * Viewport side-scaler is moved\n   * @param {MouseEvent|TouchEvent} event\n   * @param {string} side — 'left' or 'right'\n   */\n  scalerDragged(event, side){\n    let pageX = Event.getPageX(event);\n    let delta = pageX - this.moveStartX;\n\n    let direction = this.prevX < pageX ? 'right' : 'left';\n\n    if (pageX > this.wrapperRect.right || pageX < this.wrapperRect.left){\n      return;\n    }\n\n    if (!delta || this.prevX === pageX){\n      return;\n    }\n\n    this.prevX = pageX + 0;\n\n    let newScalerWidth;\n\n    if (side === 'left'){\n      delta = delta * -1;\n      newScalerWidth = Math.max(0, this.viewportOffsetLeft - delta);\n\n      if (newScalerWidth > this.leftZoneMaximumWidth) {\n        return;\n      }\n\n      this.leftWidth = newScalerWidth;\n\n      this.centerWidth = (this.wrapperWidth - newScalerWidth - this.rightZoneWidth)\n\n    } else {\n      newScalerWidth = Math.max(0, this.wrapperWidth - this.viewportOffsetLeft - (this.viewportWidthBeforeDrag + delta));\n\n      if (newScalerWidth > this.rightZoneMaximumWidth){\n        return;\n      }\n\n      this.rightWidth = newScalerWidth;\n      this.centerWidth = (this.wrapperWidth - newScalerWidth - this.leftZoneWidth)\n    }\n\n    const newViewportWidth = side === 'left' ?\n      this.wrapperWidth - newScalerWidth - this.rightZoneWidth :\n      this.wrapperWidth - this.leftZoneWidth - newScalerWidth;\n\n    const scaling = this.viewportWidthInitial / newViewportWidth * this.modules.chart.initialScale;\n\n    this.modules.chart.scale(scaling, direction);\n    this.syncScrollWithChart(side === 'left' ? newScalerWidth : this.leftZoneWidth, true);\n\n    if (this._ftmd){\n      clearTimeout(this._ftmd);\n    }\n\n    this._ftmd = setTimeout(() => {\n      this.modules.chart.fitToMax();\n    }, 20)\n  }\n\n  /**\n   * Toggle path visibility\n   * @param {string} name - graph name\n   */\n  togglePath(name, status){\n    this.graph.togglePathVisibility(name, status);\n\n    if (this.modules.state.type === 'bar'){\n      this.graph.recalculatePointsHeight(true);\n      this.fitToMax();\n    } else if (this.modules.state.type === 'area') {\n      this.graph.recalculatePointsHeight(true);\n    } else {\n      this.fitToMax();\n    }\n  }\n\n  /**\n   * Upscale or downscale graph to fit visible points\n   */\n  fitToMax(){\n    if (this.modules.state.type !== 'area'){\n      if (!this.modules.state.isYScaled){\n        this.graph.scaleToMaxPoint(this.graph.getMaxFromVisible());\n      } else {\n        this.modules.state.linesAvailable.filter(line => this.modules.chart.notHiddenGraph(line)).forEach((line) => {\n          this.graph.scaleToMaxPoint(this.graph.getMaxFromVisible(line), undefined, line);\n        })\n      }\n    }\n  }\n}","import * as Dom from '../utils/dom.js';\nimport * as Numbers from '../utils/numbers';\n\nexport default class Tooltip {\n  /**\n   * @param {Graphon} modules\n   */\n  constructor(modules){\n    this.modules = modules;\n    this.nodes = {\n      wrapper:  undefined,\n      title: undefined,\n      values: undefined\n    };\n\n    this._width = 0;\n    this._values = [];\n  }\n\n  /**\n   * CSS map\n   * @return {{wrapper: string, title: string, values: string, value: string}}\n   */\n  static get CSS(){\n    return {\n      wrapper: 'tg-tooltip',\n      showed: 'tg-tooltip--showed',\n      title: 'tg-tooltip__title',\n      values: 'tg-tooltip__values',\n      value: 'tg-tooltip__values-item',\n      valueTitle: 'tg-tooltip__values-item-title',\n    }\n  }\n\n  render(){\n    this.nodes.wrapper = Dom.make('div', Tooltip.CSS.wrapper);\n    this.nodes.title = Dom.make('div', Tooltip.CSS.title);\n    this.nodes.values = Dom.make('div', Tooltip.CSS.values);\n\n    this.nodes.wrapper.appendChild(this.nodes.title);\n    this.nodes.wrapper.appendChild(this.nodes.values);\n\n    return this.nodes.wrapper;\n  }\n\n  show(){\n    this.nodes.wrapper.classList.add(Tooltip.CSS.showed);\n  }\n\n  hide(){\n    this.nodes.wrapper.classList.remove(Tooltip.CSS.showed);\n  }\n\n  move(lineLeftCoord, values){\n    if (!this._width){\n      this._width = this.nodes.wrapper.offsetWidth;\n    }\n\n    let max = Math.max(...values.map(value => value.value));\n    let maxBottom = max * this.modules.chart.graph.kY - this.modules.chart.graph.zeroShifting;\n\n    let offsetLeft = -25;\n    let left = lineLeftCoord + offsetLeft;\n\n    if (maxBottom > 260) {\n      left = left - this._width;\n    }\n\n    if (left < this._width + 25){\n      left = lineLeftCoord + 25\n    }\n\n    if (left + this._width > this.modules.chart.viewportWidth){\n      left = left - this._width;\n    }\n\n    //\n    // if (left + this._width > this.modules.chart.viewportWidth){\n    //   left = this.modules.chart.viewportWidth - this._width - 30;\n    // }\n\n\n    // if (lineLeftCoord > this.modules.chart.viewportWidth - tooltipWidth / 1.3){\n    //   offsetLeft = -1.3 * tooltipWidth;\n    // } else if (lineLeftCoord > this.modules.chart.viewportWidth - tooltipWidth ){\n    //   offsetLeft = -0.8 * tooltipWidth;\n    // } else if (lineLeftCoord < 45){\n    //   offsetLeft = 20;\n    // }\n\n    this.nodes.wrapper.style.left = `${left}px`;\n  }\n\n  clear(){\n    this.nodes.title.textContent = '';\n    this.nodes.values.innerHTML = '';\n  }\n\n  /**\n   * Render values of current hovered points\n   * @param {{name: string, value: number}[]} values\n   */\n  set values(values){\n    this.clear();\n\n    const prevValues = this._values;\n\n    this._values = [];\n\n    if (this._setValuesDebounce){\n      clearTimeout(this._setValuesDebounce);\n    }\n\n    let summ = 0;\n\n    for (let i = 0, lenCached = values.length; i < lenCached; i++) {\n      summ += values[i].value;\n    }\n\n    if (values.length > 2){\n      this._setValuesDebounce = setTimeout(() => {\n        values.forEach( ({name, value}, index) => {\n          this.createItem(this.modules.state.names[name], this.modules.state.colors[name], value, prevValues[index], index, values)\n        });\n\n        if (this.modules.state.type === 'bar' && values.length > 1){\n          this.createItem('All', '#000', summ, null, values.length, values, true)\n        }\n      }, 150)\n\n    } else {\n        values.forEach( ({name, value}, index) => {\n          this.createItem(this.modules.state.names[name], this.modules.state.colors[name], value, prevValues[index], index, values)\n        });\n\n        if (this.modules.state.type === 'bar' && values.length > 1){\n          this.createItem('All', '#fff', null, values.length, values, true)\n        }\n    }\n\n  }\n\n  createItem(title, color, value, prevValue, index = 0, all, isAll= false){\n    const item = Dom.make('div', Tooltip.CSS.value);\n    const counter = Dom.make('b');\n\n    if (isAll){\n      item.classList.add('all');\n    }\n\n    if (this.modules.state.type === 'area'){\n      let total = all.reduce((acc, cur) => acc += cur.value, 0);\n      let percent = Math.ceil((value / total) * 100);\n\n      /**\n       * Case for zero values\n       */\n      if (isNaN(percent)){\n        percent = 0;\n      }\n\n      let percentEl = Dom.make('span', 'percents');\n\n      percentEl.textContent = percent + '%';\n\n      item.appendChild(percentEl)\n    }\n\n    let titleEl = Dom.make('span', Tooltip.CSS.valueTitle);\n\n    titleEl.textContent = title;\n\n    item.appendChild(titleEl);\n    item.appendChild(counter);\n\n    counter.style.color = color;\n\n    let valueBeautified = Numbers.addSpaces(value);\n\n    setTimeout(() => {\n      Dom.animateCounter(counter, valueBeautified, prevValue);\n    }, 50 * index);\n\n\n    this.nodes.values.appendChild(item);\n    this._values.push(valueBeautified);\n  }\n\n  set title(string){\n    this.nodes.title.innerHTML = string;\n  }\n\n  /**\n   * @param {Date} dt\n   */\n  set date(dt){\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const week = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    let month = dt.getMonth();\n    let year = dt.getFullYear();\n    let weekday = dt.getDay();\n    let day = dt.getDate();\n    let left = Dom.make('span', 'left');\n    let right = Dom.make('span');\n\n    let newDate = ''\n\n    if (!this.modules.state.byMonth){\n      newDate =   `${week[weekday]}, ${day}`;\n      right.textContent = months[month] + ' ' + year;\n    } else {\n      newDate = months[month] + ' ';\n      right.textContent = year;\n    }\n\n    this.nodes.title.innerHTML = '';\n    this.nodes.title.appendChild(left);\n    this.nodes.title.appendChild(right);\n\n\n\n    Dom.animateCounter(left, newDate, this._prevDate, 'top' );\n    this._prevDate = newDate\n  }\n}","import * as Dom from \"../utils/dom\";\n\n/**\n * Line with current values pointers\n */\nexport default class Pointer {\n  constructor(modules){\n    this.modules = modules;\n    this.nodes = {\n      wrapper: undefined,\n    };\n    this.pointers = {};\n  }\n\n  /**\n   * CSS map\n   * @return {{wrapper: string, showed: string, pointer: string}}\n   * @constructor\n   */\n  static get CSS(){\n    return {\n      wrapper: 'tg-pointer',\n      showed: 'tg-pointer--showed',\n      pointer: 'tg-pointer__pointer',\n      pointerHidden: 'tg-pointer__pointer--hidden'\n    }\n  }\n\n  render(){\n    this.nodes.wrapper = Dom.make('div', Pointer.CSS.wrapper);\n    this.nodes.wrapper.style.height = `${this.modules.state.height}px`;\n    return this.nodes.wrapper;\n  }\n\n  show(){\n    this.nodes.wrapper.classList.add(Pointer.CSS.showed);\n  }\n\n  hide(){\n    this.nodes.wrapper.classList.remove(Pointer.CSS.showed);\n  }\n\n  move(leftPx){\n    this.show();\n    this.nodes.wrapper.style.left = `${leftPx}px`;\n  }\n\n  toggleVisibility(name){\n    if (this.pointers[name]) {\n      this.pointers[name].classList.toggle(Pointer.CSS.pointerHidden)\n    }\n  }\n\n  /**\n   * Show circles\n   * @param {{name: string, value: number}[]} values\n   */\n  showValues(values){\n    if (this.modules.state.type === 'area'){\n      if (Object.keys(this.pointers).length){\n        Object.values(this.pointers).forEach((el) => {\n          el.remove();\n        });\n\n        this.pointers = {};\n      }\n      return;\n    }\n\n    if (!Object.keys(this.pointers).length){\n      values.forEach( ({name}) => {\n        const item = Dom.make('div', Pointer.CSS.pointer);\n\n        item.style.borderColor = this.modules.state.colors[name];\n        this.nodes.wrapper.appendChild(item);\n        this.pointers[name] = item;\n      })\n    }\n\n    /**\n     * @type {Graph}\n     */\n    const {graph} = this.modules.chart;\n\n    values.forEach( ({name, value}) => {\n      const item = this.pointers[name];\n      const currentZero = graph.currentMinimum;\n      const valueFromZero = value - currentZero;\n      const coord = valueFromZero * graph.kYScaled;\n\n      // item.style.bottom = `${coord}px`;\n      item.style.transform = `translateY(-${coord}px)`;\n    })\n\n  }\n}","import * as Dom from '../utils/dom.js';\nimport Graph from './graph.js';\nimport Tooltip from \"./tooltip\";\nimport Pointer from \"./pointer\";\nimport * as Event from '../utils/event.js';\n\nimport log from '../utils/log.js';\nimport * as Numbers from \"../utils/numbers\";\nimport Bar from \"./bar\";\n\n/**\n * Module for working with main Chart zone\n * - Render UI\n * - Render axes\n * - Render graphs\n * - Toggle lines visibility\n */\nexport default class Chart {\n  /**\n   * @param {Graphon} modules\n   */\n  constructor(modules){\n    this.modules = modules;\n    this.nodes = {\n      wrapper: undefined,\n      viewport: undefined,\n      canvas: undefined,\n      cursorLine: undefined,\n      grid: undefined,\n      gridLines: [],\n      legend: undefined,\n      legendDates: [],\n      overlays: undefined,\n      overlayLeft: undefined,\n      overlayRight: undefined,\n\n    };\n\n    this.tooltip = new Tooltip(this.modules);\n    this.pointer = new Pointer(this.modules);\n    this.graph = new Graph(this.modules, {\n      stroke: 2\n    });\n\n    this.wrapperLeftCoord = undefined;\n    this.scaling = 1;\n    this.scrollValue = 0;\n\n\n\n    this.legendDateWidth = 40;\n    this.legendDateWidthMargins = 20 * 2;\n    this.legendDatesHidedTimes = 0;\n    this.legendDatesRecentlyHided = false;\n\n\n    /**\n     * Set will be store indexes of visible dates\n     * @type {Set<number>}\n     */\n    this.onscreenDates = new Set();\n    this.onscreenDatesElements = {}; // origin index -> element mapping\n    this._datesPerScreenInitial = undefined;\n    this._showEveryNDateInitial = undefined;\n\n    /**\n     * Any properties can be cached here\n     * @type {{}}\n     */\n    this.cache = {};\n\n    this._initialScale = undefined;\n    this._initialStep = undefined;\n    this._hoveredPointIndex = undefined;\n  }\n\n  get initialStep(){\n    if (!this._initialStep){\n      this._initialStep = this.width / (this.modules.state.daysCount - 1);\n    }\n    return this._initialStep;\n  }\n\n  get minimalMapWidth(){\n    if (this.modules.state.byMonth){\n      return Math.max(80, Math.ceil(this.viewportWidth / this.modules.state.daysCount) * 4); // 4 month\n    }\n\n    return 80;\n  }\n\n  get initialScale(){\n    return this._initialScale;\n  }\n\n  /**\n   * Get initial scaling corresponded with minimal minimap width\n   */\n  calculateInitialValues(){\n    /**\n     * Width of viewport when chart is not scaled\n     * @type {number}\n     */\n    const chartToViewportRatio = this.viewportWidth / this.width;\n    const originalWidth = this.viewportWidth * chartToViewportRatio;\n    const scaledViewportRatio = this.minimalMapWidth / originalWidth;\n\n    const originalScalingChange = this.scaling / scaledViewportRatio;\n\n    this.initialScale = originalScalingChange;\n\n    // log({scaling: this.scaling});\n  }\n\n  set initialScale(value){\n    this._initialScale = value;\n    this.scale(value);\n  }\n\n  /**\n   * CSS map\n   * @return {{wrapper: string, viewport: string, cursorLine: string}}\n   */\n  static get CSS(){\n    return {\n      wrapper: 'tg-chart',\n      viewport: 'tg-chart__viewport',\n      grid: 'tg-grid',\n      gridSection: 'tg-grid__section',\n      gridSectionHidden: 'tg-grid__section--hidden',\n      gridCounter: 'tg-grid__counter',\n      gridCounterHidden: 'tg-grid__counter--hidden',\n      gridCounterFirst: 'tg-grid__counter--first',\n      gridCounterSecond: 'tg-grid__counter--second',\n      dateHidden: 'tg-legend__date--hidden',\n      overlays: 'tg-chart__overlays',\n      overlayLeft: 'tg-chart__overlay-left',\n      overlayRight: 'tg-chart__overlay-right',\n    }\n  }\n\n  get stepX(){\n    return this.graph.stepX;\n  }\n\n  get stepY(){\n    return this.graph.stepY;\n  }\n\n  get maxPoint(){\n    return this.graph.maxPoint;\n  }\n\n  get height(){\n    return this.graph.height;\n  }\n\n  /**\n   * Total chart width\n   * @return {number}\n   */\n  get width(){\n    return this.graph.width + 30; // 15+15 is for margins\n  }\n\n  /**\n   * Return current scroll distance\n   * @return {number}\n   */\n  get scrollDistance() {\n    return this.scrollValue * this.scaling;\n  }\n\n  /**\n   * Visible viewport width\n   * @return {number}\n   */\n  get viewportWidth(){\n    if (this.cache.viewportWidth){\n      return this.cache.viewportWidth;\n    }\n\n    this.cache.viewportWidth = this.nodes.wrapper.offsetWidth;\n    return this.cache.viewportWidth;\n  }\n\n  /**\n   * Visible viewport height\n   * @return {number}\n   */\n  get viewportHeight(){\n    if (this.cache.viewportHeight){\n      return this.cache.viewportHeight;\n    }\n\n    this.cache.viewportHeight = this.nodes.wrapper.offsetHeight;\n    return this.cache.viewportHeight;\n  }\n\n  /**\n   * Prepare UI\n   * @return {Element}\n   */\n  renderUi(){\n    this.nodes.wrapper = Dom.make('div', Chart.CSS.wrapper);\n    this.nodes.viewport = Dom.make('div', Chart.CSS.viewport);\n    this.nodes.cursorLine = this.pointer.render();\n\n    this.nodes.wrapper.appendChild(this.nodes.viewport);\n    this.nodes.wrapper.appendChild(this.nodes.cursorLine);\n    this.nodes.wrapper.appendChild(this.tooltip.render());\n\n    this.nodes.wrapper.classList.add(Chart.CSS.wrapper + '--' + this.modules.state.type);\n\n    this.bindEvents();\n\n    return this.nodes.wrapper;\n  }\n\n  /**\n   * Renders charts\n   */\n  renderCharts(){\n    this.calculateWrapperCoords();\n\n    if (this.nodes.canvas){\n      this.nodes.canvas.remove();\n    }\n\n    /**\n     * @todo pass height through the initial settings\n     */\n    this.nodes.canvas = this.graph.renderCanvas({\n      height: this.modules.state.height\n    });\n    this.nodes.viewport.appendChild(this.nodes.canvas);\n\n    /**\n     * Get initial scale\n     */\n    this.calculateInitialValues();\n\n\n\n    this.graph.renderCharts();\n    this.renderGrid();\n    this.renderLegend();\n    this.renderOverlays();\n  }\n\n  createLine(){\n    const line = Dom.make('div', Chart.CSS.gridSection);\n    this.nodes.grid.appendChild(line);\n    this.nodes.gridLines.push(line);\n\n    return line;\n  }\n\n  getLegendStep(max, min, stepsCount, kY, kYRatio){\n    let diffSize = max - min;\n    let step = diffSize / stepsCount;\n    let decimals = Math.log10(diffSize) >> 0;\n    let rounding = Math.pow(10, decimals) / 2;\n    // console.log('step', step);\n\n    step = Math.ceil(step / rounding) * rounding;\n\n    let possibleHeight = step * stepsCount * kY;\n\n    if (possibleHeight > this.height){\n      step = step / (possibleHeight / this.height >> 0);\n    }\n\n    return step;\n  }\n\n  getLegendCounter(value, name, isSecond){\n    let counter = Dom.make('span', Chart.CSS.gridCounter);\n    let text = Numbers.beautify(Math.round(value));\n\n    if (this.modules.state.type === 'area'){\n      text += '%';\n    }\n\n    counter.textContent = text;\n    counter.dataset.name = name;\n\n    if (isSecond){\n      counter.classList.add(Chart.CSS.gridCounterSecond);\n    } else {\n      counter.classList.add(Chart.CSS.gridCounterFirst);\n    }\n\n    return counter;\n  }\n\n  /**\n   * Render or updates a grid\n   */\n  renderGrid(){\n    if (!this.nodes.grid) {\n      this.nodes.grid = Dom.make('div', Chart.CSS.grid);\n      this.nodes.grid.style.height = `${this.modules.state.height}px`;\n      this.nodes.gridLines = [];\n      Dom.insertBefore(this.nodes.canvas, this.nodes.grid);\n    }\n\n    let height = this.height;\n    let max = this.getMaxVisiblePoint();\n    let min = !this.modules.state.isYScaled ? this.graph.currentMinimum || 0 : this.graph.charts['0'].currentMinimum;\n    let kY = height / (max - min);\n    let linesCount = 5;\n    let stepY = this.getLegendStep(max, min, linesCount, kY);\n\n    let stepYSecond, kYSecond, maxSecond, minSecond;\n\n    if (this.modules.state.isYScaled){\n      maxSecond = this.getMaxVisiblePoint('1');\n      minSecond = this.getMinVisiblePoint('1');\n\n      kYSecond = height / (maxSecond - minSecond);\n      let kYRatio = kY / kYSecond;\n\n      stepYSecond = this.getLegendStep(maxSecond, minSecond, linesCount, kYSecond, kYRatio);\n    }\n\n    if (this.modules.state.type === 'area'){\n      stepY = 25;\n      linesCount = 5;\n      max = 100;\n      kY = height / max;\n    }\n\n    if (this.nodes.gridLines.length){\n      this.nodes.gridLines.forEach( line => {\n        line.classList.add(Chart.CSS.gridSectionHidden);\n      })\n    }\n\n    for (let j = 0; j <= linesCount; j++) {\n      let y = j * stepY;\n      let line;\n\n      if (this.nodes.gridLines.length && this.nodes.gridLines[j]){\n        line = this.nodes.gridLines[j];\n      } else {\n        line = this.createLine();\n      }\n\n      if (j === 0){\n        line.classList.add('no-animation');\n      }\n\n      let bottom = y * kY;\n\n      if (bottom > this.height){\n        continue;\n      }\n\n      line.classList.remove(Chart.CSS.gridSectionHidden);\n      line.style.bottom = `${y * kY}px`;\n\n      line.innerHTML = '';\n\n\n\n      let counter = this.getLegendCounter(y + min, '0');\n      line.appendChild(counter);\n\n      if (stepYSecond){\n        counter.style.color = this.modules.state.getLineColor('0');\n        let kYRatio = kY / kYSecond;\n        let counter2 = this.getLegendCounter((j * stepYSecond + minSecond), '1', true);\n        counter2.style.color = this.modules.state.getLineColor('1');\n        line.appendChild(counter2);\n      }\n    }\n\n    if (this.modules.state.isYScaled){\n      this.toggleGridLabelsForChart();\n    }\n  }\n\n  /**\n   * Check if date under passed index should be visible\n   * @param {number} originalIndex - index in this.modules.state.dates\n   * @return {boolean}\n   */\n  checkDateShouldBeHidden(originalIndex){\n    let skippedCount = Math.round(((this.onscreenPointsCount / this.datesPerScreen ) - this._showEveryNDateInitial) / this._showEveryNDateInitial);\n    let checks = [];\n\n    for (let i = 1; i < skippedCount + 1; i++){\n      let idxToCheck = originalIndex + i * this._showEveryNDateInitial;\n      let check = idxToCheck % (this._showEveryNDateInitial * 2 * i) === 0;\n      checks.push(check)\n    }\n\n    return checks.some(check => !!check);\n  }\n\n  moveDate(originalIndex){\n    let dateEl = this.onscreenDatesElements[originalIndex];\n    let centering = 'translateX(-85%)';\n    let newX = originalIndex * this.stepScaled + this.scrollValue;\n\n    dateEl.style.transform = `translateX(${ newX }px)` + centering;\n\n    if (this.checkDateShouldBeHidden(originalIndex)){\n      dateEl.classList.add('hided');\n    } else {\n      dateEl.classList.remove('hided');\n    }\n  }\n\n\n  pushDate(date, originIndex, visibleIndex){\n    if (this.checkDateShouldBeHidden(originIndex)){\n      return;\n    }\n\n    const dt = new Date(date);\n    const dateEl = Dom.make('time');\n\n    if (this.modules.state.byMonth){\n      dateEl.textContent = dt.toLocaleDateString('en-US', {\n        month: 'short'\n      });\n    } else {\n      dateEl.textContent = dt.toLocaleDateString('en-US', {\n        day: 'numeric',\n        month: 'short'\n      });\n    }\n\n    // dateEl.textContent = originIndex;\n\n    this.nodes.legend.appendChild(dateEl);\n    this.nodes.legendDates.push(dateEl);\n    this.onscreenDates.add(originIndex);\n    this.onscreenDatesElements[originIndex] = dateEl;\n    this.moveDate(originIndex);\n  }\n\n  get onscreenPointsCount(){\n    return Math.floor(this.viewportWidth / this.stepScaled);\n  }\n\n  /**\n   * Left visible point\n   * @return {number}\n   */\n  get leftPointIndex(){\n    return parseInt(Math.floor(this.scrollValue * -1/ this.stepX / this.scaling));\n  }\n\n  /**\n   * Right visible point\n   * @return {number}\n   */\n  get rightPointIndex(){\n    return this.leftPointIndex + this.onscreenPointsCount;\n  }\n\n  get datesPerScreen(){\n    if (!this._datesPerScreenInitial){\n      this._datesPerScreenInitial = Math.floor(this.viewportWidth / (this.legendDateWidth + this.legendDateWidthMargins));\n    }\n    return this._datesPerScreenInitial;\n  }\n\n  get stepScaled(){\n    return this.stepX * this.scaling\n  }\n\n  addOnscreenDates(){\n    /**\n     * Get slice of timestamps that currently visible on the screen\n     */\n    let datesOnScreenSlice = this.modules.state.dates.slice(this.leftPointIndex, this.rightPointIndex + 2);\n    let datesOnScreenIndexes = new Set();\n\n    if (!this._showEveryNDateInitial){\n      let pointsOnScreen = this.rightPointIndex - this.leftPointIndex;\n      this._showEveryNDateInitial = Math.ceil(pointsOnScreen / this.datesPerScreen);\n    }\n\n    let visibleIndex = 0;\n\n    datesOnScreenSlice.forEach((date, index) => {\n      const originIndex = this.leftPointIndex + index;\n\n\n      /**\n       * Skip dates that can not be fit event on maximum zoom\n       */\n      if (originIndex % this._showEveryNDateInitial !== 0){\n        return;\n      }\n\n      /**\n       * Store index of added date to check if it out of screen\n       */\n      datesOnScreenIndexes.add(originIndex);\n\n      /**\n       * If point already showed, move it\n       */\n      if (this.onscreenDates.has(originIndex)){\n        this.moveDate(originIndex);\n        visibleIndex++;\n        return\n      }\n\n      /**\n       * Add new date to its position computed by original index * step scaled\n       */\n      this.pushDate(date, originIndex, visibleIndex);\n      visibleIndex++;\n    });\n\n    /**\n     * Remove dates that are out of screen\n     */\n    this.onscreenDates.forEach((originalIndex) => {\n      if (!datesOnScreenIndexes.has(originalIndex)) {\n        this.removeDate(originalIndex);\n      }\n    });\n  }\n\n  removeDate(originalIndex){\n    if (!this.onscreenDatesElements[originalIndex]){\n      return;\n    }\n\n    this.onscreenDates[originalIndex] = null;\n    this.onscreenDates.delete(originalIndex);\n    this.onscreenDatesElements[originalIndex].remove();\n    this.onscreenDatesElements[originalIndex] = null;\n  }\n\n  /**\n   * Renders a legend with dates\n   * @param {number[]} dates\n   */\n  renderLegend(){\n    this.nodes.legend = Dom.make('footer');\n\n    // this.addOnscreenDates();\n\n    Dom.insertAfter(this.nodes.canvas, this.nodes.legend);\n  }\n\n  /**\n   * Perform scroll\n   * @param position\n   */\n  scroll(position, fromScale){\n    this.scrollValue = position * -1;\n    this.graph.scroll(this.scrollValue);\n    this.tooltip.hide();\n    this.pointer.hide();\n    this.hideBarHighlighting();\n    this.addOnscreenDates();\n\n    if (this._sd){\n      clearTimeout(this._sd);\n    }\n\n    this._sd = setTimeout(()=>{\n      this.modules.header.setPeriod(this.modules.state.dates[this.leftPointIndex], this.modules.state.dates[this.rightPointIndex]);\n    }, 50)\n  }\n\n  /**\n   * Perform scaling\n   * @param {number} scaling\n   */\n  scale(scaling, direction){\n    this.graph.scaleLines(scaling, direction);\n\n    this.scaling = scaling;\n  }\n\n  /**\n   * Left visible point\n   * @return {number}\n   */\n  get leftPointIndex(){\n    return Math.round(this.scrollValue * -1/ this.graph.step / this.scaling);\n  }\n\n  /**\n   * Filter to skip hidden line\n   * @param {string} line - name of the graph\n   * @return {boolean}\n   */\n  notHiddenGraph(line){\n    return this.graph.checkPathVisibility(line);\n  }\n\n  get pointsVisible(){\n    const stepX = this.graph.step;\n    return Math.round(this.viewportWidth / stepX / this.scaling);\n  }\n\n  /**\n   * Return max visible point\n   * If line passed, check for that. Otherwise, return maximum between all\n   */\n  getMaxVisiblePoint(line = undefined){\n    return this.graph.getMaxFromVisible(this.leftPointIndex, this.pointsVisible, line);\n  }\n\n  /**\n   * Return min visible point\n   * If line passed, check for that. Otherwise, return maximum between all\n   */\n  getMinVisiblePoint(line = undefined){\n    if (!line){\n      return Math.min(...this.modules.state.linesAvailable.filter(line => this.notHiddenGraph(line)).map(line => {\n        return this.modules.state.getMinForLineSliced(line, this.leftPointIndex, this.pointsVisible);\n      }));\n    }\n\n    return this.modules.state.getMinForLineSliced(line, this.leftPointIndex, this.pointsVisible);\n  }\n\n  /**\n   * Upscale or downscale graph to fit visible points\n   */\n  fitToMax(){\n    if (this.modules.state.type !== 'area'){\n      if (!this.modules.state.isYScaled){\n        this.graph.scaleToMaxPoint(this.getMaxVisiblePoint(), this.getMinVisiblePoint());\n      } else {\n        this.modules.state.linesAvailable.filter(line => this.notHiddenGraph(line)).forEach((line) => {\n          this.graph.scaleToMaxPoint(this.getMaxVisiblePoint(line), this.getMinVisiblePoint(line), line);\n        })\n      }\n    }\n\n    /**\n     * Rerender grid if it was rendered before\n     */\n    if (this.nodes.grid){\n\n      if (this._gd){\n        clearTimeout(this._gd);\n      }\n\n      this._gd = setTimeout(() => {\n        this.renderGrid();\n      }, 15)\n    }\n  }\n\n  /**\n   * Store wrapper rectangle data\n   */\n  calculateWrapperCoords(){\n    let rect = this.nodes.wrapper.getBoundingClientRect();\n\n    this.wrapperLeftCoord = rect.left;\n  }\n\n  bindEvents(){\n    let supportsPassive = false;\n    try {\n      let opts = Object.defineProperty({}, 'passive', {\n        get: function() {\n          supportsPassive = true;\n        }\n      });\n      window.addEventListener(\"testPassive\", null, opts);\n      window.removeEventListener(\"testPassive\", null, opts);\n    } catch (e) {}\n\n    this.nodes.wrapper.addEventListener('mousemove', (event) => {\n      this.mouseMove(event);\n    }, supportsPassive ? { passive: true } : false);\n\n    this.nodes.wrapper.addEventListener('mouseleave', (event) => {\n      this.mouseLeave(event);\n    }, supportsPassive ? { passive: true } : false);\n\n    this.nodes.wrapper.addEventListener('touchmove', (event) => {\n      this.mouseMove(event);\n    }, supportsPassive ? { passive: true } : false);\n\n    this.nodes.wrapper.addEventListener('touchcancel', (event) => {\n      this.mouseLeave(event);\n    }, supportsPassive ? { passive: true } : false);\n  }\n\n  /**\n   * Shows line with Tooltip\n   * @param {MouseEvent|TouchEvent} event\n   */\n  mouseMove(event){\n    let x = Event.getPageX(event);\n    let viewportX = x - this.wrapperLeftCoord;\n\n    let stepXWithScale = this.graph.stepX * this.scaling;\n    let scrollOffset = this.scrollValue % stepXWithScale;\n    let pointIndex = Math.round(viewportX / this.graph.stepX / this.scaling);\n    let hoveredPointIndex = pointIndex + this.leftPointIndex;\n    // let firstStepOffset = this.graph.stepX - Math.abs(scrollOffset);\n\n    /**\n     * Prevent recalculations on mousemove with the same point\n     */\n    if (hoveredPointIndex === this._hoveredPointIndex){\n      return;\n    }\n\n    this._hoveredPointIndex = hoveredPointIndex;\n\n    if (Math.abs(scrollOffset) > (stepXWithScale / 2) ){\n      pointIndex = pointIndex + 1;\n    }\n\n    let newLeft = pointIndex * stepXWithScale + scrollOffset;\n\n    // console.log('scroll offset %o | step %o (%o)| index %o | x %o | drawn at %o | first step offset %o | left index %o ', scrollOffset, this.graph.stepX, stepXWithScale, pointIndex, viewportX, newLeft, firstStepOffset, this.leftPointIndex);\n\n     if (newLeft < this.stepScaled * 2){\n       // let old = this.scrollValue;\n       // let newScroll = (this.scrollValue + 20) * -1;\n\n       //scroll\n       //\n       // this.modules.minimap.moveViewport(-1 * (old*-1 - newScroll));\n       // this.scroll(newScroll);\n     }\n\n    this.tooltip.show();\n\n    if (this.modules.state.type === 'bar'){\n      this.highlightBar(pointIndex, scrollOffset);\n    } else {\n      this.pointer.move(newLeft);\n    }\n\n    const values = this.modules.state.linesAvailable.filter(line => this.notHiddenGraph(line)).map( line => {\n      return {\n        name: line,\n        value: this.modules.state.getLinePoints(line)[hoveredPointIndex]\n      }\n    });\n\n    /**\n     * Show circles\n     */\n    this.pointer.showValues(values);\n\n    const date = this.modules.state.dates[hoveredPointIndex];\n\n    /**\n     * Skip bounding empty positions\n     */\n    if (!date){\n      return;\n    }\n\n    this.tooltip.values = values;\n    this.tooltip.move(newLeft, values);\n    this.tooltip.date = new Date(date);\n  }\n\n  mouseLeave(){\n    this.tooltip.hide();\n    this.pointer.hide();\n    this.hideOverlays();\n  }\n\n  /**\n   * Toggle path visibility\n   * @param {string} name - graph name\n   */\n  togglePath(name, status){\n    this.graph.togglePathVisibility(name, status);\n    this.pointer.toggleVisibility(name);\n\n    if (this.modules.state.type === 'bar'){\n      this.graph.recalculatePointsHeight();\n      this.fitToMax();\n    } else if (this.modules.state.type === 'area') {\n      this.graph.recalculatePointsHeight();\n    } else {\n      this.fitToMax();\n    }\n  }\n\n  toggleGridLabelsForChart(){\n    this.modules.state.linesAvailable.forEach(line => {\n      this.nodes.grid.querySelectorAll(`[data-name=\"${line}\"]`).forEach( el => {\n        el.classList.toggle(Chart.CSS.gridCounterHidden, !this.graph.checkPathVisibility(line))\n      });\n    });\n  }\n\n  highlightBar(index, scrollOffset){\n    this.nodes.overlays.style.opacity = '1';\n    this.nodes.overlayLeft.setAttribute('width', index * this.stepScaled + scrollOffset);\n    this.nodes.overlayRight.setAttribute('x', index * this.stepScaled + this.stepScaled + scrollOffset );\n    this.nodes.overlayRight.setAttribute('width', Math.max(0 , (this.onscreenPointsCount - index)) * this.stepScaled - scrollOffset );\n  }\n\n  hideBarHighlighting(){\n    this.nodes.overlays.style.opacity = '0';\n  }\n\n  renderOverlays(){\n    this.nodes.overlays = Dom.make('g');\n    this.nodes.overlays.setAttribute('class', Chart.CSS.overlays);\n\n\n    this.nodes.overlayLeft = Dom.make('rect');\n    this.nodes.overlayLeft.setAttribute('class', Chart.CSS.overlayLeft);\n    this.nodes.overlayRight = Dom.make('rect');\n    this.nodes.overlayRight.setAttribute('class', Chart.CSS.overlayRight);\n\n    let defaultWidth = 0;\n\n    this.nodes.overlayLeft.setAttribute('x', 0);\n    this.nodes.overlayRight.setAttribute('x', this.viewportWidth - defaultWidth);\n    this.nodes.overlayLeft.setAttribute('y', 0);\n    this.nodes.overlayRight.setAttribute('y', 0);\n    this.nodes.overlayLeft.setAttribute('width', defaultWidth);\n    this.nodes.overlayRight.setAttribute('width', defaultWidth);\n    this.nodes.overlayLeft.setAttribute('height', this.viewportHeight);\n    this.nodes.overlayRight.setAttribute('height', this.viewportHeight);\n\n    this.nodes.overlays.appendChild(this.nodes.overlayLeft);\n    this.nodes.overlays.appendChild(this.nodes.overlayRight);\n    this.graph.canvas.appendChild(this.nodes.overlays);\n  }\n\n  hideOverlays(){\n    this.nodes.overlays.style.opacity = 0;\n  }\n\n  destroy(){\n    this.nodes.canvas.remove();\n\n    this._datesPerScreenInitial = undefined;\n    this._showEveryNDateInitial = undefined;\n\n    if (this.nodes.overlays){\n      this.nodes.overlays.remove();\n    }\n\n    if (this.nodes.legend){\n      this.nodes.legend.remove();\n    }\n\n    this.scaling = 1;\n    this.scrollValue = 0;\n  }\n}","import * as Dom from '../utils/dom.js';\n\nexport default class Legend {\n  /**\n   * @param {Graphon} modules\n   */\n  constructor(modules){\n    this.modules = modules;\n    this.nodes = {\n      wrapper: undefined,\n    };\n\n    this.buttons = {};\n  }\n\n  static get CSS(){\n    return {\n      wrapper: 'tg-legend',\n      item: 'tg-legend__item',\n      itemWobble: 'tg-legend__item--wobble',\n      itemSelected: 'tg-legend__item--selected',\n      itemEnabled: 'tg-legend__item--enabled',\n      checkbox: 'tg-legend__checkbox',\n    }\n  }\n\n  /**\n   * Show graphs togglers\n   * @return {Element}\n   */\n  render(){\n    this.nodes.wrapper = Dom.make('div', Legend.CSS.wrapper);\n\n    /**\n     * Object with names -> array with names\n     */\n    const namesArray = Object.entries(this.modules.state.names).map(([name, title]) => {\n      return {name, title}\n    });\n\n    namesArray.forEach(({name, title}) => {\n      let item = Dom.make('div', [Legend.CSS.item, Legend.CSS.itemEnabled]),\n        checkbox = Dom.make('span', Legend.CSS.checkbox);\n\n      item.style.borderColor = this.modules.state.colors[name];\n      item.style.backgroundColor = this.modules.state.colors[name];\n\n      item.appendChild(checkbox);\n      item.appendChild(document.createTextNode(title));\n\n      this.buttons[name] = item;\n\n      this._clickPrevented = false;\n\n      item.addEventListener('click', () => {\n        if (!this._clickPrevented){\n          this.itemClicked(name);\n        }\n      });\n\n      item.addEventListener('mousedown', () => {\n        this.mousedown(name);\n      });\n\n      item.addEventListener('touchstart', () => {\n        this.mousedown(name);\n      });\n\n      item.addEventListener('mouseup', () => {\n        this.mouseup(name);\n      });\n\n      item.addEventListener('touchend', () => {\n        this.mouseup(name);\n      });\n\n      this.nodes.wrapper.appendChild(item);\n    });\n    return this.nodes.wrapper;\n  }\n\n  mousedown(name){\n    this._timer = setTimeout(() => {\n      this._clickPrevented = true;\n\n      this.uncheckAllExceptPassed(name);\n    }, 500);\n  }\n\n  uncheckAllExceptPassed(exceptName) {\n    Object.entries(this.buttons).forEach(([name, el], index) => {\n        if (name !== exceptName){\n          this.buttons[name].classList.remove(Legend.CSS.itemEnabled);\n          this.buttons[name].style.backgroundColor = 'transparent';\n          this.buttons[name].style.color = this.modules.state.colors[name];\n\n          this.modules.chart.togglePath(name, true);\n          this.modules.minimap.togglePath(name, true);\n        } else {\n          this.buttons[name].classList.add(Legend.CSS.itemEnabled);\n          this.buttons[name].style.backgroundColor = this.modules.state.colors[name];\n          this.buttons[name].style.color = '#fff';\n\n          this.buttons[name].classList.add(Legend.CSS.itemSelected);\n          setTimeout(() => {\n            this.buttons[name].classList.remove(Legend.CSS.itemSelected);\n          }, 300);\n\n          this.modules.chart.togglePath(name, false);\n          this.modules.minimap.togglePath(name, false);\n        }\n    })\n\n  }\n\n\n  mouseup(name){\n    if (!this._timer){\n      return;\n    }\n\n    setTimeout(() => {\n      this._clickPrevented = false;\n    }, 400)\n\n    clearTimeout(this._timer);\n  }\n\n\n  /**\n   * Click handler for togglers\n   * @param {string} name - graph name\n   */\n  itemClicked(name){\n    let isLast = this.modules.state.linesAvailable.filter(line => this.modules.chart.graph.checkPathVisibility(line)).length === 1;\n\n    if (!this.buttons[name].classList.contains(Legend.CSS.itemEnabled)){\n      this.buttons[name].classList.add(Legend.CSS.itemEnabled);\n      this.buttons[name].style.backgroundColor = this.modules.state.colors[name];\n      this.buttons[name].style.color = '#fff';\n\n      this.buttons[name].classList.add(Legend.CSS.itemSelected);\n      setTimeout(() => {\n        this.buttons[name].classList.remove(Legend.CSS.itemSelected);\n      }, 300);\n    } else {\n      if (isLast){\n        this.buttons[name].classList.add(Legend.CSS.itemWobble);\n        setTimeout(() => {\n          this.buttons[name].classList.remove(Legend.CSS.itemWobble);\n        }, 300);\n\n        return;\n      }\n\n      this.buttons[name].classList.remove(Legend.CSS.itemEnabled);\n      this.buttons[name].style.backgroundColor = 'transparent';\n      this.buttons[name].style.color = this.modules.state.colors[name];\n    }\n\n    this.modules.chart.togglePath(name);\n    this.modules.minimap.togglePath(name);\n  }\n\n  toggle(name){\n\n  }\n}\n","import * as Dom from \"../utils/dom\";\n\nexport default class Header {\n  constructor(modules){\n    this.modules = modules;\n    this.nodes = {\n      wrapper: undefined,\n      title: undefined,\n      dates: undefined,\n      typeSwitchers: [],\n      detailsTogglers: [],\n    };\n\n  }\n\n  /**\n   * @return {{wrapper: string, title: string, dates: string, typeSwitcher: string, typeSwitcherCurrent: string, detailsToggler: string, detailsTogglerItem: string, detailsTogglerItemCurrent: string}}\n   */\n  static get CSS(){\n    return {\n      wrapper: 'tg-header',\n      title: 'tg-header__title',\n      dates: 'tg-header__dates',\n      typeSwitcher: 'tg-header__type-switcher',\n      typeSwitcherCurrent: 'tg-header__type-switcher--current',\n      detailsToggler: 'tg-header__details',\n      detailsTogglerItem: 'tg-header__details-item',\n      detailsTogglerItemCurrent: 'tg-header__details-item--current',\n    }\n  }\n\n  render(){\n    this.nodes.wrapper = Dom.make('div', Header.CSS.wrapper);\n    this.nodes.title = Dom.make('div', Header.CSS.title);\n    this.nodes.dates = Dom.make('div', Header.CSS.dates);\n\n    this.nodes.title.textContent = this.modules.state.title || 'Untitled';\n    this.nodes.wrapper.appendChild(this.nodes.title);\n\n    if (this.modules.dataByMonth){\n      this.appendDetailsToggler();\n    }\n\n    [\n      {\n        type: 'line',\n        icon: `<svg width=\"17\" height=\"9\" xmlns=\"http://www.w3.org/2000/svg\" style=\"margin: auto -2px;\">\n                <path d=\"M13.638 4.28l-1.566 1.5c.147.294.23.623.23.97 0 1.243-1.053 2.25-2.35 2.25-1.298 0-2.35-1.007-2.35-2.25 0-.094.006-.187.018-.278L5.317 5.37c-.422.39-.997.63-1.63.63-.302 0-.59-.054-.854-.153L1 8 0 7l1.717-2.023a2.172 2.172 0 0 1-.38-1.227c0-1.243 1.052-2.25 2.35-2.25 1.297 0 2.349 1.007 2.349 2.25 0 .094-.006.187-.018.278L8.321 5.13c.422-.39.997-.63 1.63-.63.363 0 .707.079 1.014.22l1.565-1.5a2.163 2.163 0 0 1-.229-.97c0-1.243 1.052-2.25 2.35-2.25C15.948 0 17 1.007 17 2.25S15.948 4.5 14.65 4.5c-.362 0-.706-.079-1.012-.22zm-9.952.22c.433 0 .784-.336.784-.75S4.119 3 3.686 3c-.432 0-.783.336-.783.75s.35.75.783.75zm6.266 3c.432 0 .783-.336.783-.75S10.385 6 9.952 6c-.433 0-.784.336-.784.75s.351.75.784.75zM14.65 3c.432 0 .783-.336.783-.75s-.35-.75-.783-.75c-.433 0-.784.336-.784.75s.351.75.784.75z\"/>\n              </svg>`\n      },\n      {\n        type: 'area',\n        icon: `<svg width=\"15\" height=\"13\" xmlns=\"http://www.w3.org/2000/svg\" style=\"margin: auto -1px;\">\n                <path d=\"M15 7.952L6.032 9.233 3.765 6.21 0 8.36V5.382l3.557-2.371 4.884 3.488L15 4.531v3.42zm0 1.443v1.462a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-.85l3.378-1.931 2.019 2.69L15 9.396zm0-6.355L8.702 4.93 3.585 1.274 0 3.665V2a2 2 0 0 1 2-2h11a2 2 0 0 1 2 2v1.04z\"/>\n              </svg>`\n      },\n      {\n        type: 'bar',\n        icon: `<svg width=\"14\" height=\"13\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect y=\"7\" width=\"2\" height=\"6\" rx=\"1\"/>\n                <rect x=\"12\" y=\"6\" width=\"2\" height=\"7\" rx=\"1\"/>\n                <rect x=\"4\" y=\"4\" width=\"2\" height=\"9\" rx=\"1\"/>\n                <rect x=\"8\" width=\"2\" height=\"13\" rx=\"1\"/>\n              </svg>`,\n      },\n    ].forEach(({type, icon}) => {\n      const switcher = Dom.make('span', Header.CSS.typeSwitcher);\n\n      if (type === this.modules.state.type){\n        switcher.classList.add(Header.CSS.typeSwitcherCurrent);\n      }\n\n      switcher.innerHTML = icon;\n      switcher.addEventListener('click', () => {\n        this.typeSwitcherClicked(type, switcher);\n      });\n\n      this.nodes.typeSwitchers.push(switcher);\n\n      this.nodes.wrapper.appendChild(switcher);\n    });\n\n\n    this.nodes.wrapper.appendChild(this.nodes.dates);\n\n    return this.nodes.wrapper\n  }\n\n  /**\n   * Create Day|Month toggler\n   */\n  appendDetailsToggler(){\n    const toggler = Dom.make('span', Header.CSS.detailsToggler);\n\n    [\n      {\n        title: 'Day',\n        dataStoringProperty: 'data'\n      },\n      {\n        title: 'Month',\n        dataStoringProperty: 'dataByMonth'\n      }\n    ].forEach(({title, dataStoringProperty}, index) => {\n      const togglerItem = Dom.make('span', Header.CSS.detailsTogglerItem);\n\n      if (index === 0) {\n        togglerItem.classList.add(Header.CSS.detailsTogglerItemCurrent);\n      }\n\n      togglerItem.innerHTML = title;\n      togglerItem.addEventListener('click', () => {\n        this.detailsTogglerClicked(dataStoringProperty, togglerItem);\n      });\n      toggler.appendChild(togglerItem);\n\n      this.nodes.detailsTogglers.push(togglerItem);\n    });\n\n    this.nodes.wrapper.appendChild(toggler);\n  }\n\n  typeSwitcherClicked(type, switcher){\n    this.modules.state.type = type;\n    this.modules.state.clearRecalculatedValues();\n    this.modules.chart.destroy();\n    this.modules.chart.renderCharts();\n    this.modules.minimap.renderMap();\n    this.modules.minimap.syncScrollWithChart();\n\n    this.nodes.typeSwitchers.forEach(el => el.classList.remove(Header.CSS.typeSwitcherCurrent));\n\n    switcher.classList.add(Header.CSS.typeSwitcherCurrent);\n  }\n\n  detailsTogglerClicked(dataStoringProperty, toggler){\n    this.modules.createState(dataStoringProperty);\n\n    this.modules.chart.destroy();\n    this.modules.chart.renderCharts();\n    this.modules.minimap.renderMap();\n    this.modules.minimap.syncScrollWithChart();\n\n    this.nodes.detailsTogglers.forEach(el => el.classList.remove(Header.CSS.detailsTogglerItemCurrent));\n\n    toggler.classList.add(Header.CSS.detailsTogglerItemCurrent);\n  }\n\n  setPeriod(leftDateTimestamp, rightDateTimestamp){\n    this._sd = setTimeout(() => {\n      let leftDate = (new Date(leftDateTimestamp)).toLocaleDateString('en-US', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      });\n      let rightDate = (new Date(rightDateTimestamp)).toLocaleDateString('en-US', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      });\n\n      this.nodes.dates.innerHTML = `${leftDate} - ${rightDate}`;\n\n    }, 20)\n  }\n}","import Styles from './styles/index.pcss';\n\nimport State from './modules/state';\nimport Minimap from './modules/minimap.js';\nimport Chart from './modules/chart.js';\nimport Legend from './modules/legend.js';\nimport Header from './modules/header.js';\n\nexport default class Graphon {\n  /**\n   * Main entry constructor\n   * @param {string} holderId - where to append a Chart\n   * @param {string} data - chart data in csv format\n   * @param {string} dataByMonth - chart data grouped by months in csv format\n   * @param {string} type - graph type. Available types: 'line', 'area', 'bar'\n   * @param {string[]} colors - colors list for each line\n   * @param {string[]} titles - titles list for each line\n   * @param {string} title - Graph title\n   * @param {boolean} byMonth - is graphs represents data grouped by month\n   * @param {boolean} scaled - enabled 2-axis mode\n   * @param {number} height - chart height\n   */\n  constructor({holderId, data, dataByMonth, colors, titles, type, title, byMonth, scaled, height = 350}) {\n    this.holder = document.getElementById(holderId);\n\n    /**\n     * Append <style> with all styles\n     */\n    this.loadStyles();\n\n    /**\n     * Save input params to allow to recreate State object\n     */\n    this.data = data;\n    this.dataByMonth = dataByMonth;\n    this.colors = colors;\n    this.type = type;\n    this.title = title;\n    this.titles = titles;\n    this.byMonth = byMonth;\n    this.scaled = scaled;\n    this.height = height;\n\n    this.createState();\n\n    /**\n     * Module for mini map\n     */\n    this.minimap = new Minimap(this);\n\n    /**\n     * Working with main chart zone\n     */\n    this.chart = new Chart(this);\n\n    /**\n     * Working with legend items\n     */\n    this.legend = new Legend(this);\n\n    /**\n     * Header module\n     */\n    this.header = new Header(this);\n\n    /**\n     * Create base UI elements\n     */\n    this.prepareUi();\n\n    /**\n     * Render chart and mini map\n     */\n    this.chart.renderCharts();\n    this.minimap.renderMap();\n\n    // console.timeEnd('telegraph');\n  }\n\n  /**\n   * CSS classes map\n   * @return {{nightModeEnabled: string}}\n   */\n  static get CSS(){\n    return {\n      nightModeEnabled : 'tg--night-mode'\n    }\n  }\n\n  /**\n   * Create an object with all graphs data\n   * @param {string} dataStoringProperty - name of field that stores input data in csv\n   */\n  createState(dataStoringProperty = 'data'){\n    /**\n     * Module that stores all main app state values\n     */\n    if (dataStoringProperty === 'dataByMonth'){\n      this.byMonth = true;\n    }\n\n    this.state = new State(this[dataStoringProperty], this.colors, this.titles, this.type, this.title, this.byMonth, this.scaled, this.height);\n  }\n\n  /**\n   * Load styles and append it via <style id=\"specc-graph-styles\"> tag\n   */\n  loadStyles(){\n    const styleIdentifier = 'specc-graph-styles';\n    const styleExists = document.getElementById(styleIdentifier);\n\n    if (styleExists){\n      return;\n    }\n\n    const style = document.createElement('style');\n    const head = document.querySelector('head');\n\n    style.id = styleIdentifier;\n    style.textContent = Styles;\n\n    head.appendChild(style);\n  }\n\n  /**\n   * Create base app UI\n   */\n  prepareUi(){\n    this.holder.appendChild(this.header.render());\n    this.holder.appendChild(this.chart.renderUi());\n    this.holder.appendChild(this.minimap.renderUi());\n    this.holder.appendChild(this.legend.render());\n  }\n\n  /**\n   * @public\n   * Toggles night mode\n   */\n  toggleNightMode(){\n    this.holder.classList.toggle(Graphon.CSS.nightModeEnabled);\n  }\n}"],"sourceRoot":""}